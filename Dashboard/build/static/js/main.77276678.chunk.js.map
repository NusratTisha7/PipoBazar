{"version":3,"sources":["utils/config.js","Api/products.js","views/Dashboard.js","Api/visitors.js","Api/orderCount.js","utils/auth.js","Api/user.js","Api/userAdmin.js","utils/notification.js","views/TableList.js","Api/sendMessage.js","views/UserProfile.js","Api/wallet.js","views/Orders.js","Api/order.js","views/TableUser.js","views/Pagination.js","views/TableOrder.js","views/TableCancelOrder.js","Api/utility.js","components/Utility/Child/Add Banner.js","components/Utility/CarosolComp.js","Api/paymentMethod.js","components/Utility/Instraction/PaymentMethod.js","components/Utility/Instraction/PaymentMethodData.js","Api/poupbanner.js","components/Utility/PopupBanner/Popupbanner.js","components/product/ProductUpdate.jsx","views/OrderHandle.js","components/Utility/adminActiveStatus.js","components/Utility/statusChange.js","views/Utility.js","Api/index.js","views/ProductList.js","components/product/ProductAdd.jsx","views/Products.js","Api/notification.js","views/inGameOrderTable.js","views/idCodeOrderTable.js","views/cancelInGameOrderTable.js","views/cancelIdcodeOrderTable.js","views/offerOrderTable.js","views/subscOrderTable.js","views/cancelOfferOrderTable.js","views/cancelSubscOrderTable.js","views/ActivePurchacheTable.js","views/PurchaseApprove.js","Api/addWallet.js","views/CompletePurchacheTable.js","views/CancelPurchacheTable.js","Api/auth.js","assets/img/logo.png","components/Main/Navbar/Navbar.js","views/Support.js","routes.js","views/UserCreate.js","Api/support.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/sidebar-3.jpg","layouts/Admin.js","components/protectedRoutes/AdminRoute.js","assets/images/cover/3930.jpg","components/Main/TopUp/childs/Info.js","components/User/Login.js","layouts/Login.js","components/Main/Confirmation/Confirm.js","App.js","index.js"],"names":["API","process","itemDelete","REACT_Web_API_URL","id","id2","token","JSON","parse","localStorage","getItem","axios","delete","headers","updateItem","updateProductss","put","getOneProduct","get","getAllProducts","console","log","Dashboard","useState","count","setCount","orderCount","setOrderCount","setAllProduct","revenue","setRevenue","adminOrder","setAdminOrder","useEffect","then","response","data","productId","date","searchProduct","setSearchProduct","totalOrders","totalIncome","setData","Container","fluid","Row","Col","lg","sm","Card","className","Body","xs","map","countTotal","Title","as","Footer","totalOrdersToday","totalOrdersMonthly","totalOrdersYearly","Form","onSubmit","e","preventDefault","search","post","filterProductByDate","res","Group","controlId","Label","Control","type","name","placeholder","onChange","target","value","Button","variant","style","marginBottom","fontWeight","Table","scope","item","index","admin","today","total","authenticate","cb","window","setItem","stringify","isAuthenticated","exp","jwt_decode","Date","getTime","removeItem","userInfo","jwt","decoded","initialstate","user","jwt_Token_decoded","Jwt_Decode","now","clear","AuthContext","createContext","login","userData","logout","AuthReducer","state","action","payload","AuthProvider","props","useReducer","dispatch","Provider","getAllUser","getOneUser","updateUserActiveStatus","activeStatus","deleteAllProduct","removeJwt","otpSend","code","otp","adminProfileUpdate","passwordUpdate","passwordEdit","toast","configure","position","POSITION","BOTTOM_RIGHT","userWalletId","walletUserName","userEmail","userName","userList","notify","msg","sendMessageAPI","sendMessage","top","left","transform","width","bgcolor","border","boxShadow","p","UserProfile","useForm","registerPassword","register","submitPassword","handleSubmit","setPasswordError","setError","errorsPassword","formState","errors","registerPhone","submitPhone","errorsPhone","checkOtp","submitOTP","setOTPError","username","email","password","confirmPassword","phonenumber","disabled","formData","setAdmin","profilePic","setName","FormData","React","open","setOpen","handleClose","phone","setPhone","handleClosePhone","setOtp","handleCloseOtp","a","newPassword","newRePassword","message","update","oldPassword","addPhoneNumber","verifyOtp","setVerifyOtp","checkNumber","userNumber","val","Math","floor","random","number","replaceAll","r","setNumber","catch","err","letter","userNameLetter","match","Modal","onClose","Box","sx","Typography","component","TextField","required","error","Boolean","helperText","size","marginTop","label","display","justifyContent","marginRight","onClick","minLength","container","Grid","spacing","direction","alignItems","minHeight","class","padding","textAlign","fontSize","Paper","flexDirection","minWidth","userIdNo","Chip","googleId","updateWallet","amount","spent","TableList","totalActive","totalComplete","totalCancel","adminList","setAdminList","allUserList","setAllUserList","allWallet","setAllWallet","visible","setVisible","visibleAdmin","setVisibleAdmin","show","setShow","show2","setShow2","role","getAllUserList","getAllWallet","walletBalance","setWalletBalance","editPassword","setEditPassword","disabledd","setDisabled","deleteUserById","deleteUser","filterContent","users","searchTerm","result","filter","toLowerCase","includes","toLocaleLowerCase","parseInt","wallet","currentAmount","toString","filteredData","modalOpen","walletId","handleChange2","modalOpen2","editUserPassword","onHide","Header","margin","editBalance","md","float","currentTarget","slice","prevValue","vipBatch","color","_id","userId","cursor","getOrders","getOrdersByAdminId","updateOrderStatus","OrderTables","activeOrders","loading","paginate","isComplete","reject","order","orderId","gameName","categoryName","purchaseId","product","option","price","moment","createdAt","format","handOverAdmin","Pagination","postsPerPage","totalPosts","pageNumbers","i","ceil","push","completeOrders","cancelledOrders","rejectReason","Orders","setActiveOrders","setCompleteOrders","setCancelledOrders","currentPage","setCurrentPage","currentPages","setCurrentPages","postsPerPages","currentPagess","setCurrentPagess","postsPerPagess","active","complete","cancel","length","orders","value2","value3","indexOfLastPost","indexOfFirstPost","currentPost","indexOfLastPosts","indexOfFirstPosts","currentPosts","indexOfLastPostss","indexOfFirstPostss","currentPostss","pageNumber","findAllBanner","AddBanner","firstTitle","secondTitle","link","addBanner","setAddBanner","success","alert","values","setValues","handleChange","files","set","addBanners","reset","errMsg","CarouselComp","banner","setBanner","remove","setRemove","edit","setEdit","ids","setId","editId","setEditIds","allData","editBanner","setEditBanner","handleShowDelete","handleCloseDelete","handleCloseEdit","deleteBanner","handleSubmitEdit","updateBanner","src","image","alt","closeButton","marginLeft","findAllPaymentMethod","PaymentMethod","addMethod","setAddMethod","addPaymentMethod","editMethod","setEditMethod","deletePaymentMethod","editPaymentMethod","findPopUpBanner","updatePopBanner","tz","setDefault","orderUser","game_name","category_name","game_option","game_price","totalIngame","totalIngameCancel","totalIdcode","totalIdcodeCancel","totalOffer","totalOfferCancel","totalSubsc","totalSubscCancel","srchTerm","radios","text","getImage","SetGetImage","ButtonGroup","radio","idx","ToggleButton","checked","adminActiveStatus","adminData","changeStatus","updateUserActiveStatus2","maxWidth","borderLeft","StatusChange","setAdminData","title","superadmin","Utility","PaymentMethodData","Popupbanner","getProducts","category","categoryNames","ProductUpdate","inputLists","setInputLists","inputList","backUpLink","details","topUp","setUpdateProduct","setImage","setProductInfo","handleDelete","submitItem","setItemValue","setValue","resetItem","getNewItem","submitNewItem","productInfo","submitProductInfo","submitItemData","submitData","topUpId","addItem","addData","addProduct","addItems","submitInfo","photoUpdate","raw","updateImage","to","showSuccess","htmlFor","Input","accept","preview","URL","createObjectURL","backgroundColor","xl","flexWrap","x","handleClick","onDelete","ProductList","setUpdate","deleteOneProducts","Img","images","ProductAdd","setInputList","region","platform","publisher","detailsList","setAddProduct","handleInputChange","list","handleAddClick","addProductss","detail","defaultValue","splice","handleRemoveClick","Products","setProduct","createNotifications","notification","notifications","getNotifications","editNotifications","array","inGameOrderTable","inGameOrders","markComplete","buttonAllActive","foundId","indexOf","accountType","Number","Password","backupCode","paymentComplete","idCodeOrderTable","idCodeOrders","paginates","idCode","cancelInGameOrderTable","cancelledOrdersInGame","paginatess","makeActive","cancelIdcodeOrderTable","cancelledOrdersIdCode","paginatesss","offerOrderTable","offerOrders","paginatessss","subscOrderTable","subscOrders","paginatesssss","cancelOfferOrderTable","cancelledOrdersOffer","paginatessssss","cancelSubscOrderTable","cancelledOrdersSubsc","paginatesssssss","inGameTable","idCodeTable","offerTable","subscTable","filterFunctionActive","TabPanel","children","other","hidden","a11yProps","TabPanels","a11yPropss","transactionId","transactionUser","transactionUserName","cancelAmount","transactionNum","OrderHandle","filteredProduct","setFilteredProduct","setIdCodeOrders","idCodeOrdersSearch","setIdCodeOrdersSearch","setInGameOrders","inGameOrdersSearch","setInGameOrdersSearch","setOfferOrders","offerOrdersSearch","setOfferOrdersSearch","setSubscOrders","subscOrdersSearch","setSubscOrdersSearch","setCancelledOrdersInGame","setCancelledOrdersIdCode","setCancelledOrdersOffer","setCancelledOrdersSubsc","currentPagesss","setCurrentPagesss","postsPerPagesss","currentPagessss","setCurrentPagessss","postsPerPagessss","currentPagesssss","setCurrentPagesssss","postsPerPagesssss","currentPagessssss","setCurrentPagessssss","postsPerPagessssss","currentPagesssssss","setCurrentPagesssssss","postsPerPagesssssss","adminProfile","productsId","filterAdminProduct","cancelIdcode","cancelIngame","cancelOffer","cancelSubsc","igame","idcode","offer","subsc","currentPostSearch","currentPostsSearch","indexOfLastPostsss","indexOfFirstPostsss","currentPostsss","indexOfLastPostssss","indexOfFirstPostssss","currentPostssss","currentPostssSearch","indexOfLastPostsssss","indexOfFirstPostsssss","currentPostsssss","currentPostsssSearch","indexOfLastPostssssss","indexOfFirstPostssssss","currentPostssssss","indexOfLastPostsssssss","indexOfFirstPostsssssss","currentPostsssssss","findInGameOrder","findIdCodeOrder","findOfferOrder","findSubscOrder","findInGameOrderCancel","findIdCodeOrderCancel","findOfferOrderCancel","findSubscOrderCancel","disabledButton","setDisabledButton","selectedId","categotyDelete","deleteProduct","setTimeout","value4","value5","value6","value7","value8","game","removeSpentAmount","filterOrder","notificationId","sms","noteText","note","setNote","undefined","markAll","myArray","split","markAllComplete","Alert","addSpentAmount","extra","href","mode","allowClear","productData","Option","productIds","productList","changeActiveStatus","borderBottom","borderColor","Tabs","event","newValue","Tab","findAllWallet","updateAddWallet","completePayment","paymentType","transactionID","mobileNumber","activePayment","findActivePayment","findCompletePayment","findCancelledPayment","filterPayment","filterPaymentTypeActive","filterPaymentType","filtersBoth","taka","findOneWallet","walletUser","tran","CancelPurchacheTable","cancelledPayment","tranId","search2","filter2","both","activePaymentFilterBoth","completePaymentFilterBoth","cancelPaymentFilterBoth","PurchaseApprove","setActivePayment","activePaymentSearch","setActivePaymentSearch","activePaymentFilter","setActivePaymentFilter","activePaymentFilter2","setActivePaymentFilter2","setCompletePayment","completePaymentFilter","setCompletePaymentFilter","setCancelledPayment","cancelledPaymentFilter","setCancelledPaymentFilter","allPaymentMethod","setAllPaymentMethod","setChecked","checkedIds","filters","setFilters","result2","result3","handleFilters","myfilters","newFilters","filterTransaction","payments","currentPostsFilterBoths","currentPostsFilter","currentPostsFilterBoth","currentPostsFilterBothss","registration","styled","theme","borderRadius","shape","alpha","palette","common","white","breakpoints","up","height","pointerEvents","InputBase","paddingLeft","transition","transitions","create","Support","dashboardRoutes","path","icon","layout","setUser","repassword","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","toUpperCase","showError","autoFocus","autoComplete","options","support","setSupport","getSupportMessage","markResolved","markSupport","requestType","requestDescription","setNotifications","viewNotifications","setViewNotifications","location","useLocation","view","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","routes","pathname","getBrandText","Toggle","Collapse","Nav","navbar","Item","Link","Dropdown","Menu","getFullYear","Component","Sidebar","backgroundImage","prop","key","redirect","upgrade","routeName","activeClassName","Admin","sidebarImage","hasImage","mainPanel","useRef","scrollTop","scrollingElement","current","innerWidth","element","getElementById","parentNode","ref","AdminNavbar","render","AdminRoute","rest","from","Buttons","button","Login","history","useHistory","getJwtToken","method","autofocus","App","exact","ReactDOM"],"mappings":"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","file":"static/js/main.77276678.chunk.js","sourcesContent":["export const API=process.env.REACT_APP_API_URL;\r\nexport const webAPI=process.env.REACT_Web_API_URL;\r\n\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\n\r\nexport const addProductss = (addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const addItems = (id, addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/${id}`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const itemDelete = ( id, id2) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(\r\n        `${API}admin/product/topUp/${id}/${id2}`,  {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }\r\n    );\r\n};\r\nexport const updateItem = (id, updateProductss) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const getOneProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(`${API}admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const getAllProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/`\r\n    );\r\n};\r\n\r\nexport const updateProductss = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateImage = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/image/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const deleteOneProducts = (token, id) => {\r\n    return axios.delete(\r\n        `${API}admin/product/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }\r\n    );\r\n};\r\n\r\n\r\n\r\nexport const filterAdminProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/product/filter/admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const filterProductByDate = (search) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product/filter/date/`, search, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getVisitorsPerDay } from '../Api/visitors';\r\nimport { oneDayOrder, totalRevenue, adminOrderQuery } from '../Api/orderCount';\r\nimport { getAllProducts, filterProductByDate } from '../Api/products';\r\n\r\n// react-bootstrap components\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Dashboard() {\r\n  const [count, setCount] = useState([]);\r\n  const [orderCount, setOrderCount] = useState({});\r\n  const [allProduct, setAllProduct] = useState([]);\r\n  const [revenue, setRevenue] = useState({});\r\n  const [adminOrder, setAdminOrder] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getVisitorsPerDay()\r\n      .then(response => setCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    adminOrderQuery()\r\n      .then(response => setAdminOrder(response.data))\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    oneDayOrder()\r\n      .then(response => setOrderCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    totalRevenue()\r\n      .then(response => setRevenue(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAllProducts()\r\n      .then(response => setAllProduct(response.data))\r\n  }, [])\r\n\r\n\r\n\r\n  console.log(revenue)\r\n  const [searchProduct, setSearchProduct] = useState({\r\n    productId: '',\r\n    date: ''\r\n  });\r\n\r\n  let { productId, date } = searchProduct\r\n\r\n  const [data, setData] = useState({\r\n    totalOrders: null,\r\n    totalIncome: null\r\n  });\r\n\r\n  let { totalOrders, totalIncome } = data;\r\n\r\n  const handleChange = e => {\r\n    setSearchProduct({\r\n      ...searchProduct,\r\n      [e.target.name]: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    filterProductByDate({ date })\r\n      .then(res => {\r\n        setData({\r\n          ...data,\r\n          totalOrders: res.data.totalOrders,\r\n          totalIncome: res.data.totalIncome,\r\n\r\n        })\r\n      })\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-chart text-warning\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Visitors</p>\r\n                      {count && count.map(countTotal => (\r\n                        <Card.Title as=\"h4\">{countTotal.count}</Card.Title>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\" />\r\n                  Total Visitors\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-light-3 text-success\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersToday}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-calendar-alt mr-1\"></i>\r\n                  Today\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersMonthly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-clock-o mr-1\"></i>\r\n                  This month\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersYearly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\"></i>\r\n                  This year\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"date\">\r\n                        <Form.Label>Select date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" onChange={handleChange} />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Search\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <p style={{ marginBottom: \"10px\" }}><span style={{ fontWeight: \"bold\" }}>Date:</span> {date}</p>\r\n\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Orders:</span> {totalOrders}</p>\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Income:</span> {totalIncome}</p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <Table className=\"table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th className=\"border-0\">Admin List</th>\r\n                      <th className=\"border-0\">Today's complete order</th>\r\n                      <th className=\"border-0\">Total complete order</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {adminOrder && adminOrder.map((item,index) => (\r\n                      <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{item.admin}</td>\r\n                        <td>{item.today}</td>\r\n                        <td>{item.total}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getVisitorsPerDay = () => {\r\n    return axios.get(\r\n        `${API}count`\r\n    );\r\n};\r\n\r\nexport const increaseVisitors = () => {\r\n    return axios.put(\r\n        `${API}count`\r\n    );\r\n};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const oneDayOrder = () => {\r\n    return axios.get(`${API}dashboard/order/query/oneday`)\r\n}\r\n\r\n\r\nexport const totalRevenue = () => {\r\n    return axios.get(`${API}dashboard/order/query/revenue/count`)\r\n}\r\n\r\nexport const adminOrderQuery = () => {\r\n    return axios.get(`${API}dashboard/order/query/admin_order/query`)\r\n}"," import jwt_decode from 'jwt-decode';\r\nimport {createContext, useReducer} from \"react\";\r\n\r\nexport const authenticate = (token, cb) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(token));\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window === 'undefined') return false;\r\n    if (localStorage.getItem('jwt')) { \r\n        const { exp } = jwt_decode(JSON.parse(localStorage.getItem('jwt'))); \r\n        if((new Date()).getTime() < exp * 1000){\r\n            return true;\r\n        }else{\r\n            localStorage.removeItem('jwt');\r\n            return false\r\n        }\r\n        \r\n    } else return false;\r\n}\r\n\r\nexport const userInfo = () => {\r\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\r\n    const decoded = jwt_decode(jwt);\r\n    return { ...decoded, token: jwt }\r\n}\r\n\r\n\r\nconst initialstate = {\r\n    user: null,\r\n};\r\nif (localStorage.getItem(\"JWT_Token\")) {\r\n    const jwt_Token_decoded = Jwt_Decode(localStorage.getItem(\"JWT_Token\"));\r\n    console.log(jwt_Token_decoded.exp * 1000);\r\n    console.log(Date.now());\r\n    if (jwt_Token_decoded.exp * 1000 < Date.now()) {\r\n        localStorage.clear(); // this runs only when I refresh the page or reload on route change it dosent work\r\n    } else {\r\n        initialstate.user = jwt_Token_decoded;\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {},\r\n});\r\nconst AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const AuthProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, initialstate);\r\n    const login = (userData) => {\r\n        localStorage.setItem(\"JWT_Token\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    };\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        dispatch({ action: \"LOGOUT\" });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport {AuthContext};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const getAllUser = (token) => {\r\n    return axios.get(`${API}admin/user/all_user`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getOneUser = (id) => {\r\n    return axios.get(`${API}admin/user/find/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteUser = (token,id) => {\r\n    return axios.delete(`${API}admin/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserRole = (token,role) => {\r\n    return axios.put(`${API}admin/user/roleUpdate/${role._id}`, role, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus = (activeStatus) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const id = user.id;\r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus2 = (activeStatus,id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n   \r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const addProduct = (token,productIds) => {\r\n    const productList={\r\n        productList:productIds\r\n    }\r\n    return axios.put(`${API}admin/user/add/product`, productList, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteProduct = (productId) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/${productId}`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteAllProduct = () => {\r\n    console.log(\"id\")\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/all/admin`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getJwt = () => {\r\n    return axios.get(`${API}admin/user/get/jwt`)\r\n}\r\n\r\nexport const removeJwt = () => {\r\n    return axios.get(`${API}admin/user/remove/jwt`)\r\n}\r\n\r\n\r\nexport const findUserByPhoneNumber = (number) => {\r\n    return axios.get(`${API}admin/user/find/number/${number}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const otpSend = (id,code) => {\r\n    const data={\r\n        otp:code\r\n    }\r\n    return axios.put(`${API}admin/user/otp/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUser = (id,pass) => {\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const updateUserPassword = (id, pass) => {\r\n    console.log(id)\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/edit/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n}\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const adminProfile = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const userId = user.id;\r\n    return axios.get(`${API}admin/user/find/${userId}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const adminProfileUpdate = (token,id,data) => {\r\n    return axios.put(`${API}admin/user/update/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\n\r\nexport const passwordUpdate = (token,id,data) => {\r\n    console.log(id,data)\r\n    return axios.put(`${API}admin/user/updatePassword/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const passwordEdit = (token,id,data) => {\r\n    console.log(id,data)\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n","import { toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./notification.css\"\r\n\r\ntoast.configure({\r\n  position: toast.POSITION.BOTTOM_RIGHT,\r\n})\r\n\r\nexport const notify = (msg) => {\r\n  toast(`${msg}`)\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getAllUser, deleteUser, updateUserRole } from '../Api/user';\r\nimport { passwordEdit } from \"../Api/userAdmin\";\r\nimport { userInfo } from '../utils/auth';\r\nimport './TableList.css';\r\nimport { notify } from '../utils/notification';\r\nimport { getAllWallet } from '../Api/wallet'\r\nimport { BsPencilSquare } from \"react-icons/bs\"\r\nimport { editBalance } from '../Api/wallet'\r\nlet userWalletId, walletUserName;\r\nlet userEmail, userName;\r\n\r\n// react-bootstrap components\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form\r\n} from \"react-bootstrap\";\r\nlet userList;\r\n\r\nfunction TableList() {\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [allUserList, setAllUserList] = useState([]);\r\n  const [allWallet, setAllWallet] = useState([]);\r\n  const [visible, setVisible] = useState(20);\r\n  const [visibleAdmin, setVisibleAdmin] = useState(20);\r\n  const [show, setShow] = useState(false);\r\n  const [show2, setShow2] = useState(false);\r\n  const handleClose = () => { setShow(false), setShow2(false) };\r\n  const handleShow = () => setShow(true);\r\n  const handleShow2 = () => setShow2(true);\r\n  const { token, role, id } = userInfo();\r\n\r\n  useEffect(() => {\r\n    getAllUserList()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAllWallet(token)\r\n      .then(res => setAllWallet(res.data))\r\n  }, [allWallet])\r\n\r\n\r\n  const [walletBalance, setWalletBalance] = useState({\r\n    amount: '',\r\n    disabled: false\r\n  });\r\n\r\n  const [editPassword, setEditPassword] = useState({\r\n    newPassword: '',\r\n    newRePassword: ''\r\n  });\r\n\r\n  const { newPassword, newRePassword } = editPassword;\r\n\r\n\r\n  const [disabled, setDisabled] = useState({\r\n    disabledd: false\r\n  });\r\n\r\n  const { disabledd } = disabled\r\n\r\n  const { amount } = walletBalance;\r\n\r\n  const getAllUserList = () => {\r\n    getAllUser(token)\r\n      .then(response => {\r\n        setAdminList(response.data)\r\n        setAllUserList(response.data)\r\n      })\r\n  }\r\n\r\n  const deleteUserById = (id) => () => {\r\n    setDisabled({\r\n      disabledd: true\r\n    })\r\n    deleteUser(token, id)\r\n      .then((response) => {\r\n        getAllUserList()\r\n        notify('User Delete Successfully')\r\n        setDisabled({\r\n          disabledd: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        notify('Something went wrong')\r\n        setDisabled({\r\n          disabledd: false\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  const showMore = () => {\r\n    setVisible((prevValue) => prevValue + 20)\r\n  }\r\n\r\n  const showLess = () => {\r\n    setVisible((prevValue) => prevValue - 20)\r\n  }\r\n\r\n  const showMoreAdmin = () => {\r\n    setVisibleAdmin((prevValue) => prevValue + 20)\r\n  }\r\n\r\n  const showLessAdmin = () => {\r\n    setVisibleAdmin((prevValue) => prevValue - 20)\r\n  }\r\n\r\n  const searchForAdminList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = false;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n  const searchForAllUserList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = true;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  const filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.role?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      ((parseInt(user.wallet?.currentAmount)).toString()).includes(searchTerm) ||\r\n      ((parseInt(user.userIdNo)).toString()).includes(searchTerm)\r\n    )\r\n\r\n    if (userList === true) {\r\n      let value = result.filter(filteredData => filteredData.role === 'user')\r\n      setAllUserList(value)\r\n    }\r\n    else if (userList === false) {\r\n      let value = result.filter(filteredData => filteredData.role === 'admin' || filteredData.role === 'superadmin')\r\n      setAdminList(value)\r\n    }\r\n\r\n  }\r\n\r\n  const modalOpen = (walletId, name) => () => {\r\n    handleShow()\r\n    userWalletId = walletId;\r\n    walletUserName = name;\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setWalletBalance({\r\n      ...walletBalance,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleChange2 = e => {\r\n    setEditPassword({\r\n      ...editPassword,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const editUserBalance = () => {\r\n    handleClose();\r\n    setWalletBalance({\r\n      ...walletBalance,\r\n      disabled: true\r\n    })\r\n    editBalance(token, userWalletId, parseInt(amount))\r\n      .then(res => {\r\n        setWalletBalance({\r\n          amount: '',\r\n          disabled: true\r\n        })\r\n        notify(`${walletUserName}'s wallet balance updated`)\r\n      })\r\n      .catch(err => {\r\n        setWalletBalance({\r\n          amount: '',\r\n          disabled: false\r\n        })\r\n        notify(`Something went wrong. Please try again`)\r\n      })\r\n  }\r\n\r\n  const modalOpen2 = (email, name) => () => {\r\n    handleShow2()\r\n    userEmail = email;\r\n    userName = name;\r\n\r\n  }\r\n\r\n  const editUserPassword = async () => {\r\n    if (newPassword !== newRePassword) {\r\n      notify('password do not match')\r\n    } else {\r\n      const update = {\r\n        newPassword: newPassword,\r\n        email: userEmail\r\n      }\r\n      console.log(update)\r\n      await passwordEdit(token, id, update).then(res => {\r\n        notify('Password Updated')\r\n        handleClose()\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n          Edit {walletUserName}'s Wallet Balance\r\n        </Modal.Header>\r\n        <Modal.Body style={{ margin: \"10px\" }}>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Enter the amount</Form.Label>\r\n              <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChange} style={{ width: \"80%\" }} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={editUserBalance}>\r\n            Edit\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={show2} onHide={handleClose}>\r\n        <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n          Edit {userName}'s password\r\n        </Modal.Header>\r\n        <Modal.Body style={{ margin: \"10px\" }}>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Enter New Password</Form.Label>\r\n              <Form.Control type=\"password\" name=\"newPassword\" placeholder=\"Enter amount\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n              <Form.Label>Re-enter Password</Form.Label>\r\n              <Form.Control type=\"password\" name=\"newRePassword\" placeholder=\"Enter amount\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={editUserPassword}>\r\n            Edit\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAdminList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">Admin List</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                      <th className=\"border-0\">Role</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {adminList && adminList.slice(0, visibleAdmin).filter(filteredData => filteredData.role === 'admin' && filteredData.disabled === false).map((user, index) => (\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>{user.userIdNo}</td>\r\n                        <td>{user.username}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phonenumber}</td>\r\n                        <td>{user.role}</td>\r\n                      </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n                <button className='btn btn-primary mr-3' onClick={showMoreAdmin}>Show More...</button>\r\n                <button className='btn btn-success' onClick={showLessAdmin}>Show Less...</button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAllUserList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">User List:</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                      <th className=\"border-0\">Wallet Balance</th>\r\n                      <th className=\"border-0\">Role</th>\r\n                      {(role === 'superadmin') && (<>\r\n                        <th className=\"border-0\"></th>\r\n                      </>)}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {allUserList && allUserList.slice(0, visible).filter(filteredData => filteredData.role === 'user' && filteredData.disabled === false).map((user, index) => (\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>{user.userIdNo}</td>\r\n                        <td>{user.username} {user.vipBatch === true && (<><span style={{ color: \"blue\", fontSize: \".7rem\", fontWeight: \"bold\" }}>* (VIP Batch)</span></>)}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phonenumber}</td>\r\n                        {allWallet && allWallet.map(wallet => {\r\n                          if (user._id === wallet.userId) {\r\n                            return (\r\n\r\n                              <td><div className='d-flex justify-content-around'>\r\n                                <div>{wallet.currentAmount}</div>\r\n                                <div><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen(wallet._id, user.username, wallet.currentAmount)} /></div>\r\n                              </div></td>\r\n                            )\r\n                          }\r\n                        })}\r\n                        <td>{user.role}</td>\r\n                        {(role === 'superadmin' || role === 'admin') && (<>\r\n                          <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={modalOpen2(user.email, user.username)}>Edit Password</button></td>\r\n                        </>)}\r\n                        {(role === 'superadmin' || role === 'admin') && (<>\r\n                          <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={deleteUserById(user._id)}>Delete</button></td>\r\n                        </>)}\r\n                      </tr>\r\n                    ))\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n                <button className='btn btn-primary mr-3' onClick={showMore}>Show More...</button>\r\n                <button className='btn btn-success' onClick={showLess}>Show Less...</button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableList;\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const sendMessageAPI = (sendMessage) => {\r\n    console.log(sendMessage)\r\n    return axios.post(`${API}sendMessage`,sendMessage,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n    })\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../components/Main/User/userinfo.css\"\r\nimport { userInfo } from '../utils/auth';\r\nimport { getOneUser, otpSend } from \"../Api/user\";\r\nimport { adminProfileUpdate, passwordUpdate } from \"../Api/userAdmin\";\r\nimport Avatar from \"antd/es/avatar/avatar\";\r\nimport animationData from \"../assets/lotte/34658-profile-in-mobile.json\";\r\nimport { notify } from '../utils/notification';\r\nimport { Box, Button, Chip, Container, Grid, Modal, Paper, TextField, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { sendMessageAPI } from \"../Api/sendMessage\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\nconst UserProfile = () => {\r\n    const { token, id } = userInfo();\r\n    const {\r\n        register: registerPassword,\r\n        handleSubmit: submitPassword,\r\n        setError: setPasswordError,\r\n        formState: { errors: errorsPassword }\r\n    } = useForm();\r\n    const {\r\n        register: registerPhone,\r\n        handleSubmit: submitPhone,\r\n        setError: setPhoneError,\r\n        formState: { errors: errorsPhone }\r\n    } = useForm();\r\n    const {\r\n        register: checkOtp,\r\n        handleSubmit: submitOTP,\r\n        setError: setOTPError,\r\n        formState: { errors: errorsOTP }\r\n    } = useForm();\r\n    const [admin, setAdmin] = useState(\r\n        {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            phonenumber: '',\r\n            disabled: false,\r\n            formData: '',\r\n        }\r\n    )\r\n    const [name, setName] = useState({\r\n        username: '',\r\n        profilePic: ''\r\n    })\r\n    // const {username, email, password, confirmPassword, phonenumber, disabled, image, formData} = admin\r\n\r\n    useEffect(() => {\r\n        getOneUser(token, id)\r\n            .then(response => setAdmin(response.data))\r\n            .then(response => setAdmin({ formData: new FormData() }))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => setName(response.data))\r\n    })\r\n    useEffect(() => {\r\n        setAdmin({\r\n            ...admin,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdmin({\r\n            ...admin,\r\n            [e.target.name]: value,\r\n        })\r\n\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [phone, setPhone] = React.useState(false);\r\n    const handleOpenPhone = () => setPhone(true);\r\n    const handleClosePhone = () => setPhone(false);\r\n    const [otp, setOtp] = React.useState(false);\r\n    const handleOpenOtp = () => setOtp(true);\r\n    const handleCloseOtp = () => setOtp(false);\r\n\r\n\r\n    function handleClick() {\r\n        handleOpen()\r\n    }\r\n\r\n    async function handleSubmitPassword(data) {\r\n        if (data.newPassword !== data.newRePassword) {\r\n            setPasswordError(\"newRePassword\", { type: 'notMatched', message: 'password do not match' })\r\n        } else {\r\n            const update = {\r\n                oldPassword: data.oldPassword,\r\n                newPassword: data.newPassword,\r\n                email: name.email\r\n            }\r\n            console.log(update)\r\n            await passwordUpdate(token, id, update).then(res => {\r\n                if (res.data === \"password updated!\") {\r\n                    notify('Profile Updated')\r\n                    handleClose()\r\n                } else if (res.data === \"wrong password!\") {\r\n                    setPasswordError(\"oldPassword\", { type: 'notMatched', message: 'old password do not match' })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function addPhoneNumber() {\r\n        handleOpenPhone()\r\n        // checkNumber()\r\n    }\r\n\r\n    const [verifyOtp, setVerifyOtp] = useState({})\r\n\r\n    const checkNumber = (userNumber) => {\r\n        let val = Math.floor(1000 + Math.random() * 9000);\r\n        setVerifyOtp({\r\n            otp: val\r\n        })\r\n        let sms = `Sizishop OTP Code: ${val}`\r\n        let sendMessage = {\r\n            number: userNumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        otpSend(id, val)\r\n            .then(res => {\r\n                handleClosePhone()\r\n                handleOpenOtp()\r\n                sendMessageAPI(sendMessage).then(r => {\r\n\r\n                })\r\n            })\r\n\r\n        // return (\r\n        //     setOtp(true),\r\n        //         setPhone_number(false),\r\n        //         setPassword(false)\r\n        // )\r\n    }\r\n    const [number, setNumber] = useState({})\r\n    function sendOtp(data) {\r\n        setNumber(data)\r\n        checkNumber(data.phonenumber)\r\n    }\r\n\r\n    async function updatePhoneNumber(data) {\r\n        if (data.otp * 1 === verifyOtp.otp) {\r\n            await adminProfileUpdate(token, id, number)\r\n                .then(r => {\r\n                    console.log(r)\r\n                    handleCloseOtp()\r\n                })\r\n                .catch(err => {\r\n                    notify(\"Number already exists!\")\r\n                    handleCloseOtp()\r\n                })\r\n        }\r\n        else {\r\n            console.log('not matched')\r\n            setOTPError('otp', { type: 'notMatched', message: 'otp do not matched' })\r\n        }\r\n\r\n    }\r\n\r\n    let letter = '';\r\n    var userNameLetter = name.username.match(/\\b(\\w)/g);\r\n    if (userNameLetter) {\r\n        userNameLetter.map(a => {\r\n            letter = letter + a\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal open={otp}\r\n                onClose={handleCloseOtp}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitOTP(updatePhoneNumber)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Type OTP\r\n                        </Typography>\r\n                        <TextField {...checkOtp(\"otp\", { required: \"Otp is required\", })}\r\n                            error={Boolean(errorsPhone.otp)}\r\n                            helperText={errorsPhone.otp?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"OTP\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Save Number\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleCloseOtp}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal open={phone}\r\n                onClose={handleClosePhone}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitPhone(sendOtp)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Add Phone Number\r\n                        </Typography>\r\n                        <TextField {...registerPhone(\"phonenumber\", { required: \"Phone Number is required\", })}\r\n                            error={Boolean(errorsPhone.phonenumber)}\r\n                            helperText={errorsPhone.phonenumber?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Phone Number\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Send Token\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClosePhone}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <form onSubmit={submitPassword(handleSubmitPassword)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Change Password\r\n                        </Typography>\r\n                        <TextField {...registerPassword(\"oldPassword\", { required: \"Old Password is required\", })}\r\n                            error={Boolean(errorsPassword.oldPassword)}\r\n                            helperText={errorsPassword.oldPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Old Password\" variant=\"outlined\"\r\n                            type=\"password\" />\r\n                        <TextField {...registerPassword(\"newPassword\", {\r\n                            required: \"New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newPassword)}\r\n                            helperText={errorsPassword.newPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <TextField {...registerPassword(\"newRePassword\", {\r\n                            required: \"Re-enter New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newRePassword)}\r\n                            helperText={errorsPassword.newRePassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"Re-enter New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Submit\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClose}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n\r\n            <Container container>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    style={{ minHeight: '100vh' }}\r\n                >\r\n\r\n                    <div class=\"circle\">{letter}</div>\r\n                    \r\n                    <Grid item xs={3}>\r\n                        <Typography style={{ padding: 5, textAlign: 'center', fontWeight: \"bold\", fontSize: 18 }}>\r\n                            {name.username}\r\n                        </Typography>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    User Id\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.userIdNo}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Email\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.email}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Phone Number\r\n                                </Typography>\r\n                                {name.phonenumber && <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.phonenumber}\r\n                                </Typography>}\r\n                                {!name.phonenumber && <Chip label=\"Add Phone Number\" onClick={e => addPhoneNumber()}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Password\r\n                                </Typography>\r\n                                {!name.googleId && <Chip label=\"Change Password\" onClick={handleClick}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n                                {name.googleId && <Typography>\r\n                                    Logged in with google id\r\n                                </Typography>}\r\n\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const createWallet = (token,id) => {\r\n    const data={\r\n        userId:id\r\n    }\r\n    return axios.post(`${API}admin/wallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserWallet = (token,id,walletId) => {\r\n    const data={\r\n        wallet:walletId\r\n    }\r\n    return axios.put(`${API}admin/user/walletUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/wallet/updateUserAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getAllWallet = (token) => {\r\n    return axios.get(`${API}admin/wallet`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getWalletById = (token,id) => {\r\n    return axios.get(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateWallet = (token,id,amount,spent) => {\r\n    const data={\r\n        amount,\r\n        spent\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const addSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/addSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const removeSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/removeSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteWallet = (token,id) => {\r\n    return axios.delete(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { getOrders } from \"../Api/order\";\r\nimport { userInfo } from '../utils/auth';\r\n\r\nimport Tables from \"./TableUser\";\r\nimport Pagination from \"./Pagination\";\r\nimport Tabless from \"./TableOrder\";\r\nimport Tablesss from \"./TableCancelOrder\"\r\nlet totalActive, totalComplete, totalCancel;\r\n\r\nconst Orders = () => {\r\n    const [activeOrders, setActiveOrders] = useState([])\r\n    const [completeOrders, setCompleteOrders] = useState([])\r\n    const [cancelledOrders, setCancelledOrders] = useState([])\r\n    const { token, id } = userInfo();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getOrders(token)\r\n            .then(response => {\r\n                const data = response.data\r\n                const active = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                const complete = data && data.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n                const cancel = data && data.filter(filteredData => filteredData.reject === true)\r\n                setActiveOrders(active)\r\n                totalActive = active.length;\r\n                setCompleteOrders(complete)\r\n                totalComplete = complete.length;\r\n                setCancelledOrders(cancel)\r\n                totalCancel = cancel.length;\r\n            })\r\n    }, [])\r\n\r\n\r\n    const searchOrders = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        getOrders(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((order) =>\r\n            ((parseInt(order.orderId)).toString()).includes(searchTerm) ||\r\n            order.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(order.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            ((parseInt(order.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n        let value = result.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n        setCompleteOrders(value)\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActiveOrders(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.reject === true)\r\n        setCancelledOrders(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = activeOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = completeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrders.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const paginates = pageNumber => setCurrentPages(pageNumber);\r\n    const paginatess = pageNumber => setCurrentPagess(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchOrders}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total active orders: {totalActive}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tables activeOrders={currentPost} loading={loading} paginate={currentPage} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPage}\r\n                                    totalPosts={activeOrders.length}\r\n                                    paginate={paginate}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Completed Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total completed orders: {totalComplete}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless completeOrders={currentPosts} loading={loading} paginate={currentPages} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPages}\r\n                                    totalPosts={completeOrders.length}\r\n                                    paginate={paginates}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total cancelled orders: {totalCancel}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrders={currentPostss} loading={loading} paginate={currentPagess} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagess}\r\n                                    totalPosts={cancelledOrders.length}\r\n                                    paginate={paginatess}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Orders","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNewOrder = (token,data) => {\r\n    console.log(\"order\",data)\r\n    return axios.post(`${API}admin/order/`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const orderQueue = () => {\r\n    return axios.get(`${API}admin/order/`)\r\n}\r\n\r\n\r\nexport const getOrders = (token) => {\r\n    return axios.get(`${API}admin/order/all`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getOrdersByAdminId = (token,id) => {\r\n    return axios.get(`${API}admin/order/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOrdersById = (token,id) => {\r\n    return axios.get(`${API}admin/order/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateOrderStatus = (token,id,data) => {\r\n    return axios.put(`${API}admin/order/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const markAllComplete = (token,data) => {\r\n    console.log(token,data)\r\n    return axios.put(`${API}admin/order/mark/All`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ activeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {activeOrders && activeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false).map((order, index) => (\r\n                <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Pending</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.handOverAdmin != null && (<>\r\n                        <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                    </>)}\r\n\r\n                    {order.handOverAdmin === null && (<>\r\n                        <td>\r\n                            N/A\r\n                        </td>\r\n                    </>)}\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={() => paginate(number)} className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ completeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {completeOrders && completeOrders.filter(filteredData => filteredData.isComplete === true).map((order, index) => (\r\n                <tr key={index}>\r\n                    <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Complete</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ cancelledOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>{cancelledOrders && cancelledOrders.filter(filteredData => filteredData.reject === true).map((order, index) => (\r\n            <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                <td>{order.orderId}</td>\r\n                <td>{order.userId?.userIdNo}</td>\r\n                <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                <td>Cancel ( {order.rejectReason} )</td>\r\n                <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n            </tr>\r\n        ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addBanners = (token,addBanner) => {\r\n    return axios.post(`${API}admin/banner`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateBanner = (token,id,editBanner) => {\r\n    console.log(id)\r\n    return axios.put(`${API}admin/banner/${id}`, editBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllBanner = () => {\r\n    return axios.get(`${API}admin/banner`)\r\n}\r\n\r\nexport const deleteBanner = (token,id) => {\r\n    return axios.delete(`${API}admin/banner/delete/${id}`,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { addBanners } from \"../../../Api/utility\";\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { Alert } from \"antd\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst AddBanner = () => {\r\n    const [addBanner, setAddBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    let { success, alert, disabled } = values;\r\n    const { firstTitle, secondTitle, link, formData } = addBanner\r\n\r\n    useEffect(() => {\r\n        setAddBanner({\r\n            ...addBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddBanner({\r\n            ...addBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n\r\n        setAddBanner({\r\n            ...addBanner\r\n        })\r\n        const { token } = userInfo();\r\n        addBanners(token, formData)\r\n            .then(response => {\r\n                setAddBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Added successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    const BannerForm = () => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                        <Form.Label>Upload a file</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                    <Row>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>First Title</Form.Label>\r\n                                <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\"\r\n                                    value={firstTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Second Title</Form.Label>\r\n                                <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\"\r\n                                    value={secondTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Link</Form.Label>\r\n                                <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\"\r\n                                    value={link} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                        Add\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {BannerForm()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBanner","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Form, Modal, Table, Row, Col } from \"react-bootstrap\";\r\nimport AddBanner from \"./Child/Add Banner\";\r\nimport { deleteBanner, findAllBanner, updateBanner } from \"../../Api/utility\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport { userInfo } from '../../utils/auth';\r\nimport { API } from '../../utils/config';\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst CarouselComp = () => {\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const [editBanner, setEditBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false\r\n    })\r\n    const { success, alert } = values;\r\n    const { firstTitle, secondTitle, link, formData } = editBanner\r\n\r\n    useEffect(() => {\r\n        setEditBanner({\r\n            ...editBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteBanner(token, ids)\r\n            .then(response => notify('Banner Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditBanner({\r\n            ...editBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault()\r\n        setEditBanner({\r\n            ...editBanner\r\n        })\r\n        const { token } = userInfo();\r\n        updateBanner(token,editId, formData)\r\n            .then(response => {\r\n                setEditBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Updated successfully!\")\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <AddBanner />\r\n                </Card.Body>\r\n            </Card>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>First Title</th>\r\n                        <th>Second Title</th>\r\n                        <th>Link</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.firstTitle}</td>\r\n                                <td>{data.secondTitle}</td>\r\n                                <td>{data.link}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\">\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{marginLeft:\"30px\"}}>Edit Banner</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Form.Label>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                            <Form.Label>Upload a file</Form.Label>\r\n                                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>First Title</Form.Label>\r\n                                            <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\" value={firstTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>Second Title</Form.Label>\r\n                                            <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\" value={secondTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Link</Form.Label>\r\n                                            <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\" value={link} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Form.Label>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update product\r\n                    </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CarouselComp","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const addPaymentMethod = (token, addBanner) => {\r\n    return axios.post(`${API}paymentMethod`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllPaymentMethod = () => {\r\n    return axios.get(`${API}paymentMethod`)\r\n}\r\n\r\nexport const deletePaymentMethod = (token, id) => {\r\n    return axios.delete(`${API}paymentMethod/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editPaymentMethod = (token, id, formData) => {\r\n    return axios.put(`${API}paymentMethod/${id}`, formData, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { addPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled:false\r\n    })\r\n\r\n    const { success, alert,disabled } = values;\r\n    const { name, number, formData } = addMethod\r\n\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled:true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        addPaymentMethod(token, formData)\r\n            .then(response => {\r\n                setAddMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Added Successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n   \r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Payment Method</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Payment Method Name</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Number</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Button, Form, Modal, Table, Row, Col } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { deletePaymentMethod, findAllPaymentMethod, editPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\nimport { notify } from \"../../../utils/notification\";\r\n\r\nconst PaymentMethod = () => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [edit, setEdit] = useState(false);\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    const [editMethod, setEditMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    const { success, alert, disabled } = values;\r\n    const { name, number, formData } = editMethod\r\n\r\n    useEffect(() => {\r\n        setEditMethod({\r\n            ...editMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditMethod({\r\n            ...editMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deletePaymentMethod(token, ids)\r\n            .then(response => notify('Payment method Deleted Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault();\r\n        setEditMethod({\r\n            ...editMethod\r\n        })\r\n        setValues({\r\n            disabled: true\r\n        })\r\n        const { token } = userInfo();\r\n        editPaymentMethod(token, editId, formData)\r\n            .then(response => {\r\n                setEditMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Updated!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                notify(\"Something wrong!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>Payment Method Name</th>\r\n                        <th>Number</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.name}</td>\r\n                                <td>{data.number}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button type=\"submit\" variant=\"primary\" onClick={handleCloseDelete}>\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Payment Method</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Form.Label>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Payment Method Name</Form.Label>\r\n                                            <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Number</Form.Label>\r\n                                            <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                            <Form.Label>Default file input example</Form.Label>\r\n                                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </Form>\r\n                        </Form.Label>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                        <Button type=\"submit\" variant=\"primary\"  disabled={disabled}>\r\n                            Update product\r\n                        </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import axios from \"axios\";\r\nimport {API} from \"../utils/config\";\r\n\r\nexport const addPopUpBanner = (token, addProduct) => {\r\n\r\n    // const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}popUpBanner`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const findPopUpBanner = () => {\r\n    return axios.get(`${API}popUpBanner/61deb99e0255c919c3eab429`)\r\n}\r\n\r\nexport const updatePopBanner = (updateProductss) => {\r\n    console.log(updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}popUpBanner/61deb99e0255c919c3eab429`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Row, ToggleButton } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { notify } from '../../../utils/notification'\r\nimport { findPopUpBanner, updatePopBanner } from \"../../../Api/poupbanner\";\r\nimport { API } from \"../../../utils/config\";\r\nimport moment from 'moment-timezone';\r\nmoment.tz.setDefault('Asia/Dhaka');\r\n\r\nconst radios = [\r\n    { name: 'InActive', value: 'inActive' },\r\n    { name: 'Active', value: 'active' },\r\n];\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        text: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [getImage, SetGetImage] = useState({\r\n        image: ''\r\n    })\r\n\r\n    let id = getImage._id\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n\r\n    const { success, alert, disabled } = values;\r\n    const { formData } = addMethod\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findPopUpBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                SetGetImage(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [getImage]);\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        updatePopBanner(formData)\r\n            .then(response => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                setAddMethod({\r\n                    success: true,\r\n                })\r\n                notify(\"Popup Banner changed successfully!\")\r\n                \r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset()\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    function changeActiveStatus(value) {\r\n        const updateData = {\r\n            activeStatus: value\r\n        }\r\n        updatePopBanner(updateData).then(res => console.log(res))\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Popup banner</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Upload popup banner</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Text</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"text\" onChange={handleChange} placeholder=\"Add popup banner text\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Link</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"link\" onChange={handleChange} placeholder=\"Add a link\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div><ButtonGroup>\r\n                                        {radios.map((radio, idx) => (\r\n                                            <ToggleButton\r\n                                                key={idx}\r\n                                                id={`radio-${idx}`}\r\n                                                type=\"radio\"\r\n                                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                                name=\"radio\"\r\n                                                value={radio.value}\r\n                                                checked={getImage.activeStatus === radio.value}\r\n                                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                                            >\r\n                                                {radio.name}\r\n                                            </ToggleButton>\r\n                                        ))}\r\n                                    </ButtonGroup></div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <img width=\"20%\" src={`${API}${getImage.image}`} alt=\"banner\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Card, Form, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getOneProduct, updateProductss, addItems, itemDelete, updateItem, updateImage } from \"../../Api/products\";\r\nimport { notify } from '../../utils/notification'\r\nimport { Alert } from \"antd\";\r\nimport {\r\n    Box,\r\n    Chip,\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    Grid, Input,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CardBody } from \"reactstrap\";\r\nimport MenuItem from \"antd/es/menu/MenuItem\";\r\nimport { BiImages } from \"react-icons/bi\";\r\nlet formData;\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\n\r\nconst ProductUpdate = ({ id }) => {\r\n\r\n    let [inputLists, setInputLists] = useState([{}]);\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\"\r\n    }]);\r\n    const { option, price } = inputList;\r\n\r\n    const [updateProduct, setUpdateProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        backUpLink: '',\r\n        image: '',\r\n        details: [],\r\n        topUp: [],\r\n        //formData: '',\r\n    });\r\n\r\n    //let { formData } = updateProduct;\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n\r\n    const { success, alert, disabled } = values;\r\n\r\n    useEffect(() => {\r\n        formData = new FormData()\r\n        // setUpdateProduct({\r\n        //     ...updateProduct,\r\n        //     formData: new FormData()\r\n        // })\r\n    }, []);\r\n\r\n\r\n    // const handleDetailChange = (e, index) => {\r\n    //     const {name, value} = e.target\r\n    //     const list = [...detailsList];\r\n    //     list[index][name] = value;\r\n    //     setDetailsList(list)\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         details: detailsList\r\n    //     })\r\n    //     formData.set(\"details\", JSON.stringify(details))\r\n    //\r\n    // }\r\n    // const handleInputChange = (e, index) => {\r\n    //     const {name, value} = e.target;\r\n    //     const list = [...inputList];\r\n    //     list[index][name] = value;\r\n    //     setInputList(list);\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         topUp: inputList\r\n    //     })\r\n    //\r\n    //     let prePackage = [];\r\n    //     for (let i = 0; i < inputLists.length; i++) {\r\n    //         prePackage.push({\"option\": inputLists[i].option, \"price\": inputLists[i].price})\r\n    //     }\r\n    //     Array.prototype.push.apply(topUp, prePackage);\r\n    //     formData.set(\"topUp\", JSON.stringify(topUp))\r\n    // };\r\n    const [image, setImage] = useState({})\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n                preview: URL.createObjectURL(e.target.files[0]),\r\n                raw: e.target.files[0],\r\n            });\r\n        }\r\n    };\r\n\r\n    console.log(inputLists)\r\n    useEffect(async () => {\r\n        await getOneProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setUpdateProduct(allData)\r\n                setInputLists(allData.topUp)\r\n                setProductInfo('gameName', `${allData.gameName}`)\r\n                setProductInfo('categoryName', `${allData.categoryName}`)\r\n                setProductInfo('backUpLink', `${allData.backUpLink}`)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (index) => async () => {\r\n        await itemDelete(id, index).then(r => {\r\n            console.log(r.data)\r\n            setInputLists(r.data)\r\n            notify(\"deleted successfully\")\r\n        })\r\n    };\r\n\r\n    const [show, setShow] = useState(false)\r\n    //\r\n    const [item, setItem] = useState({})\r\n\r\n\r\n    const {\r\n        register: getItem,\r\n        handleSubmit: submitItem,\r\n        setValue: setItemValue,\r\n        reset: resetItem,\r\n        formState: { errors: errorItem }\r\n    } = useForm();\r\n    const {\r\n        register: getNewItem,\r\n        handleSubmit: submitNewItem,\r\n        setValue: setNewItemValue,\r\n        reset: resetNewItem,\r\n        formState: { errors: errorNewItem }\r\n    } = useForm();\r\n    const {\r\n        register: productInfo,\r\n        handleSubmit: submitProductInfo,\r\n        setValue: setProductInfo,\r\n        reset: resetProductInfo,\r\n        formState: { errors: errorProductInfo }\r\n    } = useForm();\r\n\r\n    function handleClick(option, price, index) {\r\n        setItem({\r\n            id: index,\r\n            option: option,\r\n            price: price\r\n        })\r\n        setShow(true)\r\n        setItemValue(\"option\", `${option}`)\r\n        setItemValue(\"price\", `${price}`)\r\n    }\r\n\r\n    async function submitItemData(data) {\r\n        const submitData = {\r\n            topUpId: item.id,\r\n            option: data.option,\r\n            price: data.price\r\n        }\r\n        resetItem({ option: \"\" })\r\n        resetItem({ price: \"\" })\r\n        await updateItem(id, submitData).then(r => {\r\n            \r\n            setInputLists(r.data),\r\n                notify(\"updated successfully\")\r\n        })\r\n        setShow(false)\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product' />\r\n            <Alert message=\"Product updated\" type=\"success\" />\r\n        </>)\r\n    }\r\n\r\n    function addItem(data) {\r\n        const addData = {\r\n            id: item._id,\r\n            option: data.option,\r\n            price: data.price\r\n        }\r\n        addItems(id, addData).then(r => {\r\n            setInputLists(r.data),\r\n                notify(\"added successfully\")\r\n        })\r\n\r\n    }\r\n\r\n    async function submitInfo(data) {\r\n        await updateProductss(id, data).then(r => {\r\n            notify(\"updated successfully\")\r\n        })\r\n    }\r\n\r\n    const photoUpdate = () => {\r\n        formData.set(\"image\", image.raw)\r\n        updateImage(id, formData)\r\n            .then(r => {\r\n                notify(\"Photo updated!\")\r\n            })\r\n    }\r\n\r\n    function updateForm() {\r\n        return (\r\n            <>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Update & Delete Product Item</Card.Title>\r\n                        <Form.Label>Change Image</Form.Label>\r\n\r\n                        <form onSubmit={submitProductInfo(submitInfo)}>\r\n                            <div>\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\"\r\n                                        onChange={e => handleChange(e)} />\r\n                                    <Button onClick={photoUpdate} style={{ backgroundColor: \"#1565C0\", color: \"white\" }} >\r\n                                        Save Photo\r\n                                    </Button>\r\n                                </label>\r\n                            </div>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Game</Form.Label>\r\n                                    <TextField id=\"outlined-basic\" size=\"small\"\r\n                                        style={{ width: '100%' }}\r\n                                        variant=\"outlined\"\r\n                                        {...productInfo(\"gameName\")} />\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                        name=\"categoryName\"\r\n                                        {...productInfo(\"categoryName\")}>\r\n                                        <option>Select an account type</option>\r\n                                        {\r\n                                            category.map((data, index) => {\r\n                                                return (\r\n                                                    <option key={index}>{data.categoryNames}</option>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Form.Label>Backup Link</Form.Label>\r\n                            <TextField id=\"outlined-basic\" size=\"small\"\r\n                                style={{ width: '100%', marginBottom: 10 }}\r\n                                variant=\"outlined\"\r\n                                {...productInfo(\"backUpLink\")} />\r\n                            <Button type='submit' variant='outline' style={{ backgroundColor: \"#1565C0\", color: \"white\" }}> Update </Button>\r\n                        </form>\r\n\r\n                        <hr />\r\n                        <Form.Label>\r\n                            Update & Delete Item\r\n                        </Form.Label>\r\n                        <div style={{ display: \"flex\", flexWrap: 'wrap' }}>\r\n\r\n                            {inputLists?.map((x, index) => {\r\n                                return (\r\n\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        style={{ marginRight: 10, marginTop: 10 }}\r\n                                        label={`${x.option}  (${x.price} Taka)`}\r\n                                        onClick={e => handleClick(x.option, x.price, x._id)}\r\n                                        onDelete={handleDelete(x._id)}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\r\n                            {\r\n                                show && (\r\n                                    <form onSubmit={submitItem(submitItemData)}>\r\n                                        <Typography>\r\n                                            Update Product\r\n                                        </Typography>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n                                                    style={{ width: '100%', marginTop: 10 }} label=\"Option\"\r\n\r\n                                                    variant=\"outlined\" {...getItem(\"option\")} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n\r\n                                                    style={{ width: '100%', marginTop: 10 }} label=\"Price\"\r\n                                                    variant=\"outlined\" {...getItem(\"price\")}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Box style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: 'center',\r\n                                                    marginTop: 10\r\n                                                }}>\r\n                                                    <Button variant=\"outlined\" style={{ marginRight: 5 }}\r\n                                                        type='submit'>\r\n                                                        update\r\n                                                    </Button>\r\n                                                    <Button variant=\"outlined\" onClick={e => setShow(false)}>\r\n                                                        cancel\r\n                                                    </Button>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n                                    </form>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        <form onSubmit={submitNewItem(addItem)}>\r\n                            <hr />\r\n                            <Form.Label>\r\n                                Add new Item\r\n                            </Form.Label>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                    style={{ width: '100%', marginTop: 10 }} label=\"Option\"\r\n                                    variant=\"outlined\" {...getNewItem(\"option\")} /></Grid>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                    style={{ width: '100%', marginTop: 10 }} label=\"Price\"\r\n                                    variant=\"outlined\" {...getNewItem(\"price\")} /></Grid>\r\n                                <Grid item><Button type='submit' style={{ width: '100%', marginTop: 10 }}\r\n                                    variant=\"outlined\">Add Item</Button></Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {updateForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate;","import React, { useEffect, useState } from \"react\";\r\nimport { adminProfile } from \"../Api/userAdmin\";\r\nimport { getAllProducts, filterAdminProduct } from \"../Api/products\";\r\nimport { updateUserActiveStatus, addProduct, deleteProduct } from \"../Api/user\";\r\nimport { Button, Select, Radio, Card } from \"antd\";\r\nimport { getOrdersByAdminId, updateOrderStatus, markAllComplete } from '../Api/order'\r\nimport { userInfo } from '../utils/auth';\r\nimport { ButtonGroup, Col, Form, Row, ToggleButton, Table, Alert, Modal } from \"react-bootstrap\";\r\nimport { createNotifications } from '../Api/notification'\r\nimport { notify } from '../utils/notification'\r\nimport { AiTwotoneSkin, AiOutlineDelete, } from \"react-icons/ai\";\r\nimport { updateWallet, addSpentAmount, removeSpentAmount } from '../Api/wallet';\r\nimport { sendMessageAPI } from '../Api/sendMessage'\r\nimport moment from \"moment\";\r\nimport Tablessss from './inGameOrderTable';\r\nimport Tables from './idCodeOrderTable';\r\nimport Tabless from './cancelInGameOrderTable';\r\nimport Tablesss from './cancelIdcodeOrderTable';\r\nimport Tablesssss from './offerOrderTable';\r\nimport Tablessssss from './subscOrderTable';\r\nimport Tablesssssss from './cancelOfferOrderTable';\r\nimport Tablessssssss from './cancelSubscOrderTable';\r\nimport Pagination from \"./Pagination\";\r\nlet orderId, orderUser, game_name, category_name, game_option, game_price, message, paymentStatus;\r\nlet search = false;\r\nlet inGameTable = false, idCodeTable = false, offerTable = false, subscTable = false;\r\nlet totalIngame, totalIngameCancel, totalIdcode, totalIdcodeCancel, totalOffer, totalOfferCancel, totalSubsc, totalSubscCancel, filterFunctionActive = false, srchTerm;\r\nlet buttonAllActive = false;\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nfunction TabPanels(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanels.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yPropss(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst OrderHandle = () => {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChanges = (event, newValue) => {\r\n        setValue(newValue);\r\n        localStorage.removeItem('orderArray')\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.removeItem('orderArray')\r\n    }, [])\r\n\r\n    const { token, id } = userInfo();\r\n    const [product, setProduct] = useState(false);\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProduct, setFilteredProduct] = useState([])\r\n    const [adminData, setAdminData] = useState([])\r\n    const [idCodeOrders, setIdCodeOrders] = useState([])\r\n    const [idCodeOrdersSearch, setIdCodeOrdersSearch] = useState([])\r\n    const [inGameOrders, setInGameOrders] = useState([])\r\n    const [inGameOrdersSearch, setInGameOrdersSearch] = useState([])\r\n    const [offerOrders, setOfferOrders] = useState([])\r\n    const [offerOrdersSearch, setOfferOrdersSearch] = useState([])\r\n    const [subscOrders, setSubscOrders] = useState([])\r\n    const [subscOrdersSearch, setSubscOrdersSearch] = useState([])\r\n    const [cancelledOrdersInGame, setCancelledOrdersInGame] = useState([])\r\n    const [cancelledOrdersIdCode, setCancelledOrdersIdCode] = useState([])\r\n    const [cancelledOrdersOffer, setCancelledOrdersOffer] = useState([])\r\n    const [cancelledOrdersSubsc, setCancelledOrdersSubsc] = useState([])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess] = useState(10);\r\n    const [currentPagesss, setCurrentPagesss] = useState(1);\r\n    const [postsPerPagesss] = useState(10);\r\n    const [currentPagessss, setCurrentPagessss] = useState(1);\r\n    const [postsPerPagessss] = useState(10);\r\n    const [currentPagesssss, setCurrentPagesssss] = useState(1);\r\n    const [postsPerPagesssss] = useState(10);\r\n    const [currentPagessssss, setCurrentPagessssss] = useState(1);\r\n    const [postsPerPagessssss] = useState(10);\r\n    const [currentPagesssssss, setCurrentPagesssssss] = useState(1);\r\n    const [postsPerPagesssssss] = useState(10);\r\n\r\n\r\n    const radios = [\r\n        { name: 'InActive', value: 'inActive' },\r\n        { name: 'Active', value: 'active' },\r\n    ];\r\n\r\n    useEffect(()=>{\r\n        localStorage.removeItem('orderArray')\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        adminProfile()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setAdminData(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n\r\n    const [productsId, setProductsId] = useState([]);\r\n    const [productId, setProductId] = useState({});\r\n\r\n    useEffect(() => {\r\n        getAllProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterAdminProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setFilteredProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [filteredProduct]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n                totalIdcodeCancel = cancelIdcode.length\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n                totalIngameCancel = cancelIngame.length\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n                totalOfferCancel = cancelOffer.length\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n                totalSubscCancel = cancelSubsc.length\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n                totalIngame = igame.length\r\n            })\r\n    }, [inGameOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n                totalIdcode = idcode.length\r\n            })\r\n    }, [idCodeOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n                totalOffer = offer.length\r\n            })\r\n    }, [offerOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n                totalSubsc = subsc.length\r\n            })\r\n    }, [subscOrders]);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = inGameOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostSearch = inGameOrdersSearch.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = idCodeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = idCodeOrdersSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrdersInGame.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    const indexOfLastPostsss = currentPagesss * postsPerPagesss;\r\n    const indexOfFirstPostsss = indexOfLastPostsss - postsPerPagesss;\r\n    const currentPostsss = cancelledOrdersIdCode.slice(indexOfFirstPostsss, indexOfLastPostsss);\r\n\r\n    const indexOfLastPostssss = currentPagessss * postsPerPagessss;\r\n    const indexOfFirstPostssss = indexOfLastPostssss - postsPerPagessss;\r\n    const currentPostssss = offerOrders.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n    const currentPostssSearch = offerOrdersSearch.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n\r\n    const indexOfLastPostsssss = currentPagesssss * postsPerPagesssss;\r\n    const indexOfFirstPostsssss = indexOfLastPostsssss - postsPerPagesssss;\r\n    const currentPostsssss = subscOrders.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n    const currentPostsssSearch = subscOrdersSearch.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n\r\n    const indexOfLastPostssssss = currentPagessssss * postsPerPagessssss;\r\n    const indexOfFirstPostssssss = indexOfLastPostssssss - postsPerPagessssss;\r\n    const currentPostssssss = cancelledOrdersOffer.slice(indexOfFirstPostssssss, indexOfLastPostssssss);\r\n\r\n\r\n    const indexOfLastPostsssssss = currentPagesssssss * postsPerPagesssssss;\r\n    const indexOfFirstPostsssssss = indexOfLastPostsssssss - postsPerPagesssssss;\r\n    const currentPostsssssss = cancelledOrdersSubsc.slice(indexOfFirstPostsssssss, indexOfLastPostsssssss);\r\n\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const paginates = pageNumber => setCurrentPages(pageNumber);\r\n    const paginatess = pageNumber => setCurrentPagess(pageNumber);\r\n    const paginatesss = pageNumber => setCurrentPagesss(pageNumber);\r\n    const paginatessss = pageNumber => setCurrentPagessss(pageNumber);\r\n    const paginatesssss = pageNumber => setCurrentPagesssss(pageNumber);\r\n    const paginatessssss = pageNumber => setCurrentPagessssss(pageNumber);\r\n    const paginatesssssss = pageNumber => setCurrentPagesssssss(pageNumber);\r\n\r\n\r\n\r\n    const findInGameOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrder =async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrder =async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n            })\r\n    }\r\n\r\n    const findInGameOrderCancel = async() => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrderCancel = async() => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrderCancel = async() => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrderCancel =async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n            })\r\n    }\r\n\r\n\r\n    const changeActiveStatus = value => {\r\n        updateUserActiveStatus(value)\r\n            .catch(err => notify('Something wrong! please try again'))\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n\r\n    async function handleChange(selectedId) {\r\n        productId[\"productList\"] = selectedId\r\n    }\r\n\r\n    function handleSubmit() {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        productsId.push(productId)\r\n        addProduct(token, productsId)\r\n            .then(res => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Category added successfully')\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n    }\r\n\r\n    const categotyDelete = (productId, categoryName) => {\r\n        deleteProduct(productId)\r\n            .then(res => notify('Categoty removed!'))\r\n            .catch(err => notify('Something wrong!'))\r\n\r\n        if (categoryName === '(InGame)') {\r\n            setTimeout(() => { inGameTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(IDCode)') {\r\n            setTimeout(() => { idCodeTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Offer)') {\r\n            setTimeout(() => { offerTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Subsc)') {\r\n            setTimeout(() => { subscTable = false }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const searchOrder = (e) => {\r\n        let searchTerm = e.target.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            filterFunctionActive = true;\r\n        }\r\n        else {\r\n            search = true\r\n        }\r\n        getOrdersByAdminId(token, id)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((item) =>\r\n            item.userId?.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.orderId)).toString()).includes(searchTerm) ||\r\n            item.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            item.purchaseId?.accountType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Number?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Password?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.backupCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.idCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n\r\n        let value = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n        setInGameOrdersSearch(value)\r\n\r\n        let value2 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n        setIdCodeOrdersSearch(value2)\r\n\r\n        let value3 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n        setCancelledOrdersInGame(value3)\r\n\r\n        let value4 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n        setCancelledOrdersIdCode(value4)\r\n\r\n        let value5 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n        setOfferOrdersSearch(value5)\r\n\r\n        let value6 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n        setSubscOrdersSearch(value6)\r\n\r\n        let value7 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n        setCancelledOrdersOffer(value7)\r\n\r\n        let value8 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n        setCancelledOrdersSubsc(value8)\r\n    }\r\n\r\n    const makeActive = (id, user, game, category, product, price) => () => {\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = game;\r\n        category_name = category;\r\n        game_option = product;\r\n        game_price = price;\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(res => {\r\n                removeSpentAmount(token, orderUser, game_price, orderId)\r\n                    .then(res => {\r\n                        createNotifications(token, orderUser, `Your order has been reactive for ${game_name}. Purchase Package: ${game_option} ${game_price} Taka`)\r\n                            .then(async res => {\r\n                                notify('Order reactive successfully!')\r\n                                await findInGameOrder()\r\n                                await findIdCodeOrder()\r\n                                await findOfferOrder()\r\n                                await findSubscOrder()\r\n                                await findInGameOrderCancel()\r\n                                await findIdCodeOrderCancel()\r\n                                await findOfferOrderCancel()\r\n                                await findSubscOrderCancel()\r\n                                if (filterFunctionActive === true) {\r\n                                    await filterOrder()\r\n                                }\r\n                                setDisabledButton({\r\n                                    disabled: false\r\n                                })\r\n                            })\r\n                            .catch(res => {\r\n                                notify('Something wrong! Please try again')\r\n                                setDisabledButton({\r\n                                    disabled: false\r\n                                })\r\n                                findInGameOrder()\r\n                                findIdCodeOrder()\r\n                                findOfferOrder()\r\n                                findSubscOrder()\r\n                                findInGameOrderCancel()\r\n                                findIdCodeOrderCancel()\r\n                                findOfferOrderCancel()\r\n                                findSubscOrderCancel()\r\n                            })\r\n                    })\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const markComplete = (id, notificationId, phonenumber, gameName, categoryName, option, spent, walletId) => () => {\r\n        console.log(id, notificationId, phonenumber, gameName, categoryName, option, spent, walletId)\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true,\r\n            userId: notificationId,\r\n            paymentComplete: true\r\n        }\r\n        let sms = `Your order from Sizishop has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(async res => {\r\n                const amount = 0\r\n                notify('Order confirmed!')\r\n                //sendMessageAPI(sendMessage)\r\n                await findInGameOrder()\r\n                await findIdCodeOrder()\r\n                await findOfferOrder()\r\n                await findSubscOrder()\r\n                if (filterFunctionActive === true) {\r\n                    filterOrder()\r\n                }\r\n                createNotifications(token, notificationId, `Your order has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka. `)\r\n                    .then(res => {\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n\r\n    }\r\n\r\n    const modalOpen = (id, user, gameName, categoryName, option, price, complete) => () => {\r\n        handleShow()\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = gameName;\r\n        category_name = categoryName;\r\n        game_option = option;\r\n        game_price = price;\r\n        paymentStatus = complete\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const handleOnChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n    const createNote = () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n        updateOrderStatus(token, orderId, data)\r\n            .then(res => {\r\n                addSpentAmount(token, orderUser, game_price, orderId)\r\n                    .then(res => {\r\n                        createNotifications(token, orderUser, `Your order has been cancelled for ${game_name} ${category_name}. Purchase Package: ${game_option}(${game_price}). Reason: ${message}`)\r\n                            .then(async res => {\r\n                                handleClose()\r\n                                notify('Order cancelled')\r\n                                await findInGameOrder()\r\n                                await findIdCodeOrder()\r\n                                await findOfferOrder()\r\n                                await findSubscOrder()\r\n                                await findInGameOrderCancel()\r\n                                await findIdCodeOrderCancel()\r\n                                await findOfferOrderCancel()\r\n                                await findSubscOrderCancel()\r\n                                if (filterFunctionActive === true) {\r\n                                    await filterOrder()\r\n                                }\r\n                                setDisabledButton({\r\n                                    disabled: false\r\n                                })\r\n                            })\r\n                            .catch(res => {\r\n                                notify('Something wrong! Please try again')\r\n                                findInGameOrder()\r\n                                findIdCodeOrder()\r\n                                findOfferOrder()\r\n                                findSubscOrder()\r\n                                findInGameOrderCancel()\r\n                                findIdCodeOrderCancel()\r\n                                findOfferOrderCancel()\r\n                                findSubscOrderCancel()\r\n                                setDisabledButton({\r\n                                    disabled: false\r\n                                })\r\n                            })\r\n                    })\r\n                    .catch(res => {\r\n                        notify('Something wrong! Please try again')\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                        findInGameOrder()\r\n                        findIdCodeOrder()\r\n                        findOfferOrder()\r\n                        findSubscOrder()\r\n                        findInGameOrderCancel()\r\n                        findIdCodeOrderCancel()\r\n                        findOfferOrderCancel()\r\n                        findSubscOrderCancel()\r\n                    })\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const filterOrder = async () => {\r\n        if (srchTerm != undefined) {\r\n            await getOrdersByAdminId(token, id)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    if (localStorage.getItem('orderArray') != null) {\r\n        if (localStorage.getItem('orderArray').length === 0) {\r\n            buttonAllActive = false\r\n        } else {\r\n            buttonAllActive = true\r\n        }\r\n    }\r\n\r\n    if (!localStorage.getItem('orderArray')) {\r\n        buttonAllActive = false\r\n    }\r\n\r\n\r\n    const markAll = () => {\r\n        const myArray = localStorage.getItem('orderArray').split(\",\");\r\n        markAllComplete(token, myArray)\r\n        .then(res=>{\r\n            localStorage.removeItem('orderArray')\r\n            notify(\"Order Confirmed!\")\r\n            //window.location.reload();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Alert variant=\"danger\">\r\n                Please turn off active status before leaving the admin panel\r\n            </Alert>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this order?</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleOnChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-primary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <Card title={`Hello ${adminData.username}`} extra={<p href=\"#\">Pick A Category</p>} >\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Please select\"\r\n                    onChange={e => handleChange(e)}\r\n                >\r\n                    {filteredProduct && filteredProduct.map((productData, index) => (\r\n                        <Select.Option key={index} value={productData._id} name='productId' >\r\n                            {productData.gameName}{productData.categoryName}\r\n                        </Select.Option>\r\n                    ))}\r\n\r\n                </Select>\r\n\r\n                <div className=\"pt-4 d-flex justify-content-center\">\r\n                    <Button type=\"primary\" onClick={handleSubmit} disabled={disabled}>\r\n                        Add Selected Items\r\n                    </Button>\r\n                </div>\r\n                <div className=\"pt-4 text-center\">\r\n                    <div className='text-center'><Form.Label>Active Order Status</Form.Label></div>\r\n                    <div><ButtonGroup>\r\n                        {radios.map((radio, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                id={`radio-${idx}`}\r\n                                type=\"radio\"\r\n                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                name=\"radio\"\r\n                                value={radio.value}\r\n                                checked={adminData.activeStatus === radio.value}\r\n                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                            >\r\n                                {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup></div>\r\n                </div>\r\n            </Card>\r\n            <br />\r\n\r\n            <Card title={`Your Category`}>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th className=\"border-0\">Your Category</th>\r\n                            <th className=\"border-0\" />\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {adminData.productList && adminData.productList.map((productId, index) => {\r\n                            if (product) {\r\n                                for (var i = 0; i < product.length; i++) {\r\n                                    if (product[i]._id === productId) {\r\n                                        if (product[i].categoryName === '(InGame)') {\r\n                                            inGameTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(IDCode)') {\r\n                                            idCodeTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Offer)') {\r\n                                            offerTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Subsc)') {\r\n                                            subscTable = true\r\n                                        }\r\n                                        return (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{product[i].gameName} {product[i].categoryName}</td>\r\n                                                    <td style={{ textAlign: \"center\" }}>\r\n                                                        <button variant=\"light\" onClick={() => categotyDelete(productId, product[i].categoryName)} >\r\n                                                            <AiOutlineDelete size={20} />\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <br />\r\n\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            name=\"serachTerm\"\r\n                            onChange={searchOrder}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Pending Orders</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChanges} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yProps(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yProps(1)} />\r\n                        <Tab label=\"Offer\" {...a11yProps(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yProps(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanel value={value} index={0} >\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`InGame Orders`}>\r\n\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Ingame orders: {totalIngame}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tablessss inGameOrders={currentPostSearch} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tablessss inGameOrders={currentPost} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                        </>)}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPage}\r\n                                    totalPosts={inGameOrders.length}\r\n                                    paginate={paginate}\r\n                                />\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`IdCode Orders`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Idcode orders: {totalIdcode}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tables idCodeOrders={currentPostsSearch} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tables idCodeOrders={currentPosts} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPages}\r\n                                    totalPosts={idCodeOrders.length}\r\n                                    paginate={paginates}\r\n                                />\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Offer Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Offer orders: {totalOffer}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablesssss offerOrders={currentPostssSearch} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablesssss offerOrders={currentPostssss} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPagessss}\r\n                                totalPosts={offerOrders.length}\r\n                                paginate={paginatessss}\r\n                            />\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Subsc Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Subsc orders: {totalSubsc}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssSearch} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssss} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPagesssss}\r\n                                totalPosts={subscOrders.length}\r\n                                paginate={paginatesssss}\r\n                            />\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Cancelled Order</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yPropss(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yPropss(1)} />\r\n                        <Tab label=\"Offer\" {...a11yPropss(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yPropss(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanels value={value} index={0}>\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (InGame)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Ingame orders: {totalIngameCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless cancelledOrdersInGame={currentPostss} loading={loading} paginatess={currentPagess} makeActive={makeActive} disabled={disabled} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagess}\r\n                                    totalPosts={cancelledOrdersInGame.length}\r\n                                    paginate={paginatess}\r\n                                />\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={1}>\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (IdCode)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Idcode orders: {totalIdcodeCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrdersIdCode={currentPostsss} loading={loading} paginatesss={currentPagesss} makeActive={makeActive} disabled={disabled} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagesss}\r\n                                    totalPosts={cancelledOrdersIdCode.length}\r\n                                    paginate={paginatesss}\r\n                                />\r\n                            </Card>\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Cancelled Orders (Offer)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Offer orders: {totalOfferCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablesssssss cancelledOrdersOffer={currentPostssssss} loading={loading} paginatessssss={currentPagessssss} makeActive={makeActive} disabled={disabled} />\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPagessssss}\r\n                                totalPosts={cancelledOrdersOffer.length}\r\n                                paginate={paginatessssss}\r\n                            />\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Cancelled Orders (Subsc)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Subs orders: {totalSubscCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablessssssss cancelledOrdersSubsc={currentPostsssssss} loading={loading} paginatesssssss={currentPagesssssss} makeActive={makeActive} disabled={disabled} />\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPagesssssss}\r\n                                totalPosts={cancelledOrdersSubsc.length}\r\n                                paginate={paginatesssssss}\r\n                            />\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default OrderHandle","import React from 'react';\r\nimport { updateUserActiveStatus2 } from \"../../Api/user\";\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst adminActiveStatus = ({ adminData, paginate }) => {\r\n   \r\n    const changeStatus = (user) => () => {\r\n        let activeStatus = user.activeStatus === \"active\" ? \"InActive\" : \"active\";\r\n        let id=user._id\r\n        updateUserActiveStatus2(activeStatus,id)\r\n                .then((response) => {\r\n                    notify('Admin active status updated')\r\n                })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {adminData && adminData.map((user, index) => (\r\n                <>\r\n                    <div >\r\n                        <span style={{ marginRight: \"10px\" }}>{(paginate - 1) * 10 + index + 1}</span>\r\n                        <span style={{ maxWidth: \"50px\" }}> {user.username}</span>\r\n\r\n                        <span>\r\n                            <button id=\"role-btn\" className=\"role-btn\">{user.activeStatus}</button>\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"role-btn\" style={{ borderLeft: \"1px solid #0d8bf2\", width: '35px' }}>\r\n                                    <i className=\"fa fa-caret-down\"></i>\r\n                                </button>\r\n                                <div id=\"role-dropdown\" className=\"dropdown-content\">\r\n                                    <p onClick={changeStatus(user)}>{user.activeStatus === \"active\" ? \"InActive\" : \"active\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div><br />\r\n                </>\r\n\r\n            ))}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default adminActiveStatus;","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { getAllUser } from '../../Api/user';\r\nimport { userInfo } from '../../utils/auth';\r\nimport Tables from \"./adminActiveStatus\";\r\nimport Pagination from \"../../views/Pagination\";\r\n\r\nconst StatusChange = () => {\r\n    const { token } = userInfo();\r\n    const [adminData, setAdminData] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = adminData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        getAllUser(token)\r\n            .then((res) => {\r\n                let data = res.data\r\n                const admin = data && data.filter(filteredData => filteredData.role === 'admin')\r\n                setAdminData(admin)\r\n                console.log(admin)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n    return (\r\n        <div>\r\n            <Card title={`Admin Active Status`}>\r\n\r\n                <Tables adminData={currentPost} paginate={currentPage} />\r\n\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={adminData.length}\r\n                    paginate={paginate}\r\n                />\r\n            </Card>\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default StatusChange;","import React, { useEffect } from \"react\";\r\nimport CarouselComp from \"../components/Utility/CarosolComp\";\r\nimport Instruction from \"../components/Utility/Instraction/PaymentMethod\";\r\nimport PaymentMethodData from \"../components/Utility/Instraction/PaymentMethodData\";\r\nimport Popupbanner from \"../components/Utility/PopupBanner/Popupbanner\";\r\nimport StatusChange from \"../components/Utility/statusChange\";\r\nimport { userInfo } from '../utils/auth';\r\nlet superadmin = false;\r\n\r\nconst Utility = () => {\r\n\r\n    const { role } = userInfo();\r\n\r\n    if (role === 'superadmin') {\r\n        superadmin = true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {superadmin && (\r\n                <StatusChange />\r\n            )}<br />\r\n            <div>Banners</div>\r\n            <CarouselComp />\r\n            <div>Instruction</div>\r\n            <Instruction />\r\n            <PaymentMethodData />\r\n            <Popupbanner />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Utility","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/`\r\n    );\r\n};\r\n\r\nexport const logOut = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/logout`,{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n};","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n    AiOutlineDelete,\r\n    AiOutlineEdit, AiOutlineUpload,\r\n} from \"react-icons/ai\";\r\nimport { Card, Row, Col, Button, Form, Modal } from \"react-bootstrap\";\r\nimport ProductUpdate from \"../components/product/ProductUpdate\";\r\nimport { deleteOneProducts } from \"../Api/products\";\r\nimport { notify } from '../utils/notification'\r\nimport { API } from '../utils/config';\r\nimport { userInfo } from \"../utils/auth\";\r\nimport {Chip} from \"@mui/material\";\r\n\r\nconst ProductList = ({ data }) => {\r\n\r\n    const id = data._id\r\n    const [update, setUpdate] = useState(false);\r\n    const [remove, setRemove] = useState(false);\r\n    const { token } = userInfo();\r\n\r\n    const handleClose = () => setUpdate(false);\r\n\r\n    const handleShow = () => setUpdate(true)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteOneProducts(token, id)\r\n            .then(response => notify('Product Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleShowDelete = () => setRemove(true);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col sm={12} md={6} lg={4} xl={3}>\r\n                    <Card>\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            className=\"cart_image\"\r\n                            src={`${API}${data.images}`}\r\n                        />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-dark bg-white text-center\">\r\n                                {data.gameName}\r\n                            </Card.Title>\r\n                            <Row className='mt-4'>\r\n                                <Col className=\"text-center text-lg\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineEdit onClick={handleShow} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineDelete onClick={e => handleShowDelete(e)} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} lg={8} xl={9}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    Game Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.gameName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    Category Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.categoryName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                {data.topUp.map((product, index) => {\r\n                                    return (\r\n                                        <div key={index} style={{marginRight: 10, marginTop: 10}}>\r\n                                            <Chip color=\"primary\" variant=\"outlined\"\r\n                                                label={`${product.option},     (${product.price}Taka)`}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <Form>\r\n                                <Modal show={update} size='lg' onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title ><div style={{marginLeft: 10}}>Update Product</div></Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body ><ProductUpdate  id={id} /></Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </Form>\r\n\r\n                            <Modal show={remove} size='lg' onHide={handleCloseDelete}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Delete Item</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form onSubmit={e => handleSubmit(e)}>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            <Form.Label>Do you want to delete this item?</Form.Label>\r\n                                            <Button type=\"submit\" variant=\"primary\">\r\n                                                Yes Delete\r\n                                            </Button>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleCloseDelete}>\r\n                                        No\r\n                                    </Button>\r\n                                    <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\"\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductList","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addProductss, addProductImage, deleteProductImage } from \"../../Api/products\";\r\nimport { Alert } from \"antd\";\r\nimport { notify } from '../../utils/notification'\r\nlet productId;\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\nconst ProductAdd = () => {\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\"\r\n    }]);\r\n\r\n    const [detailsList, setDetailsList] = useState([{\r\n        region: '',\r\n        platform: '',\r\n        publisher: '',\r\n    }]);\r\n\r\n    const [addProduct, setAddProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        image: '',\r\n        backUpLink: '',\r\n        topUp: [],\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n\r\n    const { success, alert, disabled } = values;\r\n\r\n    const { region, platform, publisher } = detailsList;\r\n    const { option, price } = inputList;\r\n\r\n    const { gameName, categoryName, image, backUpLink, details, topUp, formData } = addProduct;\r\n\r\n    useEffect(() => {\r\n        setAddProduct({\r\n            ...addProduct,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleDetailChange = (e, index) => {\r\n        const { name, value } = e.target\r\n        const list = [...detailsList];\r\n        list[index][name] = value;\r\n        setDetailsList(list)\r\n        setAddProduct({\r\n            ...addProduct,\r\n            details: detailsList\r\n        })\r\n        formData.set(\"details\", JSON.stringify(details))\r\n    }\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            topUp: inputList\r\n        })\r\n        formData.set(\"topUp\", JSON.stringify(topUp))\r\n    };\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { option: \"\", price: \"\" }]);\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, disabled: true });\r\n\r\n        addProductss(formData)\r\n            .then(response => {\r\n                setAddProduct({\r\n                    ...addProduct,\r\n                    gameName: '',\r\n                    categoryName: '',\r\n                    image: '',\r\n                    backUpLink: '',\r\n                    detail: detailsList,\r\n                    topUp: inputList,\r\n                    success: true,\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                    alert: false,\r\n                    disabled: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload a file</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Backup Code Link</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"backUpLink\" placeholder=\"Backup Code Link\" value={backUpLink}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Game</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"gameName\" placeholder=\"Game name\" value={gameName}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                            value={categoryName} name=\"categoryName\" onChange={handleChange}>\r\n                            <option>Select an account type</option>\r\n                            {\r\n                                category.map((data, index) => {\r\n                                    return (\r\n                                        <option key={index}>{data.categoryNames}</option>\r\n                                    )\r\n                                }\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                        {/*<Form.Group className=\"mb-3\" controlId=\"addCategory\">*/}\r\n                        {/*    <Form.Label>Add Category</Form.Label>*/}\r\n                        {/*    <Form.Control type=\"category\" name=\"categoryName\" placeholder=\"Category name\"*/}\r\n                        {/*        value={categoryName} onChange={handleChange} />*/}\r\n                        {/*</Form.Group>*/}\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product Option</Form.Label>\r\n                                    <Form.Control type=\"option\" name=\"option\" placeholder=\"option\"\r\n                                        value={option} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product price</Form.Label>\r\n                                    <Form.Control type=\"price\" name=\"price\" placeholder=\"Product price\"\r\n                                        value={price} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\" disabled={disabled}>\r\n                        Add new product\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product' />\r\n            <Alert message=\"Product added\" type=\"success\" />\r\n        </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductAdd;","import React, { useEffect, useState } from \"react\";\r\nimport { getProducts } from \"../Api\";\r\nimport { Button, Card, Col, Modal, Row } from \"react-bootstrap\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductAdd from \"../components/product/ProductAdd\";\r\nimport \"./product.css\"\r\n\r\nconst Products = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [product, setProduct] = useState([])\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [product]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\"  className=\"mb-4\" onClick={handleShow}>\r\n                Add Products\r\n            </Button>\r\n            <Modal show={show} size='lg' onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body><ProductAdd /></Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Product List</Card.Title>\r\n                    <Row>\r\n                        {product && product.map((product, index) => {\r\n                            if (product.disabled === false) {\r\n                                return (\r\n                                    <Col key={index}\r\n                                        lg=\"12\" sm=\"12\"\r\n                                        className=\" text-decoration-none\">\r\n                                        <div to={`category/${index}/${product.gameName}`}><ProductList key={index} data={product} />\r\n                                        </div>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Products;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNotifications = (token,id,notification) => {\r\n    const value={\r\n        notifications:notification\r\n    }\r\n    return axios.post(`${API}notification/${id}`,value,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getNotifications = (token,id) => {\r\n    return axios.get(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editNotifications = (token,id) => {\r\n    return axios.put(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nlet array = []\r\n\r\n\r\nconst inGameOrderTable = ({ inGameOrders, loading, paginate, markComplete, modalOpen, disabled,buttonAllActive }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {inGameOrders && inGameOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" /></td>\r\n                    <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default inGameOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nlet array = []\r\n\r\nconst idCodeOrderTable = ({ idCodeOrders, loading, paginates, markComplete, modalOpen, disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        }\r\n    \r\n    }\r\n    return (\r\n        <>\r\n            {idCodeOrders && idCodeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" /></td>\r\n                    <td>{(paginates - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    \r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default idCodeOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelInGameOrderTable = ({ cancelledOrdersInGame, loading, paginatess,makeActive,disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersInGame && cancelledOrdersInGame.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelInGameOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelIdcodeOrderTable = ({ cancelledOrdersIdCode, loading, paginatesss,makeActive,disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersIdCode && cancelledOrdersIdCode.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesss - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelIdcodeOrderTable;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nlet array = []\r\n\r\nconst offerOrderTable = ({ offerOrders, loading, paginatessss, markComplete, modalOpen, disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        }\r\n    \r\n    }\r\n    return (\r\n        <>\r\n\r\n            {offerOrders && offerOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" /></td>\r\n                    <td>{(paginatessss - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default offerOrderTable;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nlet array = []\r\n\r\nconst subscOrderTable = ({ subscOrders, loading, paginatesssss, markComplete, modalOpen, disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\",array)\r\n        }\r\n    \r\n    }\r\n    return (\r\n        <>\r\n\r\n            {subscOrders && subscOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" /></td>\r\n                    <td>{(paginatesssss - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default subscOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelOfferOrderTable = ({ cancelledOrdersOffer, loading, paginatessssss,makeActive,disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersOffer && cancelledOrdersOffer.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatessssss - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelOfferOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelSubscOrderTable = ({ cancelledOrdersSubsc, loading, paginatesssssss,makeActive,disabled }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledOrdersSubsc && cancelledOrdersSubsc.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesssssss - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelSubscOrderTable;","import { BsPencilSquare } from \"react-icons/bs\";\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { updateAddWallet, findOneWallet, editBalance } from '../Api/addWallet';\r\nimport { updateWallet } from '../Api/wallet';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { userInfo } from '../utils/auth';\r\nimport { notify } from '../utils/notification';\r\nimport moment from \"moment\";\r\nimport { sendMessageAPI } from '../Api/sendMessage'\r\nlet transactionId, transactionUser, transactionUserName, message, cancelAmount, transactionNum;\r\n\r\nconst OrderTables = ({ activePayment, loading, paginates, findActivePayment, findCompletePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType, filtersBoth }) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const handleCloseEdit = () => setEdit(false);\r\n    const handleShowEdit = () => setEdit(true);\r\n    const { token } = userInfo();\r\n\r\n    const [walletBalance, setWalletBalance] = useState({\r\n        amount: '',\r\n        disabled: false\r\n    });\r\n\r\n\r\n    const { amount } = walletBalance;\r\n\r\n    const handleChangeAmount = e => {\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const { noteText, disabled } = note;\r\n\r\n    const markComplete = (id, transactionId, taka, phonenumber) => () => {\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true\r\n        }\r\n        let sms = `${taka} Taka has been added to your sizishop wallet for TransactionId: ${transactionId}`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateAddWallet(token, id, data)\r\n            .then(response => {\r\n                findOneWallet(token, id)\r\n                    .then(response => {\r\n                        const walletId = response.data.walletId;\r\n                        const amount = response.data.amount;\r\n                        const walletUser = response.data.userId;\r\n                        const spent = 0\r\n                        updateWallet(token, walletId, amount, spent)\r\n                            .then(async res => {\r\n                                notify('Transaction confirmed!')\r\n                                //sendMessageAPI(sendMessage)\r\n                                createNotifications(token, walletUser, `${taka} Taka has been added to your wallet for TransactionId: ${transactionId}`)\r\n                                await findActivePayment()\r\n                                await findCompletePayment()\r\n                                if (filterFunctionActive === true) {\r\n                                    await filterPayment()\r\n                                }\r\n                                if (filterPaymentTypeActive === true) {\r\n                                    await filterPaymentType()\r\n                                }\r\n                                await filtersBoth()\r\n                                setNote({\r\n                                    ...note,\r\n                                    disabled: false\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                let data = {\r\n                                    isComplete: false\r\n                                }\r\n                                updateAddWallet(token, id, data)\r\n                                    .then(response => {\r\n                                        findActivePayment()\r\n                                        notify('Something Failed! Please try again')\r\n                                        setNote({\r\n                                            ...note,\r\n                                            disabled: false\r\n                                        })\r\n                                    })\r\n                            })\r\n                    })\r\n                    .catch(err => {\r\n                        setNote({\r\n                            ...note,\r\n                            disabled: false\r\n                        })\r\n                        notify('Something Failed! Please try again')\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                let data = {\r\n                    isComplete: false\r\n                }\r\n                updateAddWallet(token, id, data)\r\n                    .then(response => {\r\n                        findActivePayment()\r\n                        notify('Something Failed! Please try again')\r\n                        setNote({\r\n                            ...note,\r\n                            disabled: false\r\n                        })\r\n                    })\r\n                    .catch(err => {\r\n                        setNote({\r\n                            ...note,\r\n                            disabled: false\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    const modalOpen = (id, userId, name, amount, tran) => () => {\r\n        handleShow()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n        transactionNum = tran\r\n    }\r\n\r\n    const modalOpen2 = (id, userId, name, amount) => () => {\r\n        handleShowEdit()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n\r\n    const createNote = () => {\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n\r\n        updateAddWallet(token, transactionId, data)\r\n            .then(res => {\r\n                createNotifications(token, transactionUser, `Your tranaction has been canceled for ${cancelAmount} Taka (TransactionId: ${transactionNum}). Reason: ${message}`)\r\n                    .then(async res => {\r\n                        await findActivePayment();\r\n                        await findCancelledPayment();\r\n                        if (filterFunctionActive === true) {\r\n                            await filterPayment()\r\n                        }\r\n                        if (filterPaymentTypeActive === true || filtersBoth === true) {\r\n                            await filterPaymentType()\r\n                        }\r\n\r\n                        handleClose();\r\n                        notify('Transaction cancelled');\r\n                        setNote({\r\n                            ...note,\r\n                            disabled: false\r\n                        })\r\n                    })\r\n            })\r\n            .catch(res => {\r\n                findActivePayment()\r\n                notify('Something wrong! Please try again')\r\n                setNote({\r\n                    ...note,\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const editUserAmount = () => {\r\n        handleCloseEdit();\r\n        setWalletBalance({\r\n            ...walletBalance\r\n        })\r\n        editBalance(token, transactionId, parseInt(amount))\r\n            .then(res => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                findActivePayment()\r\n                notify(`${transactionUserName}'s transaction balance updated`)\r\n            })\r\n            .catch(err => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                notify(`Something went wrong. Please try again`)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this transaction?</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit} >\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {transactionUserName}'s transaction amount\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter the amount</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChangeAmount} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserAmount}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleCloseEdit}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {activePayment && activePayment.map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginates - 1) * 10 + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td><div className='d-flex justify-content-around'>\r\n                        <div>{item.amount}</div>\r\n                        <div className=\"ml-2\"><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen2(item._id, item.userId?._id, item.userId?.username, item.amount)} /></div>\r\n                    </div></td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(item._id, item.transactionID, item.amount, item.userId?.phonenumber)}>Mark as Complete</button>\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={modalOpen(item._id, item.userId?._id, item.userId?.username, item.amount, item.transactionID)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { findAllWallet, filterTransaction } from '../Api/addWallet';\r\nimport { findAllPaymentMethod } from '../Api/paymentMethod';\r\nimport { userInfo } from '../utils/auth';\r\nimport Pagination from \"./Pagination\";\r\nimport Tables from \"./CompletePurchacheTable\";\r\nimport Tabless from \"./ActivePurchacheTable\";\r\nimport Tablesss from \"./CancelPurchacheTable\";\r\nimport { ajaxPrefilter } from 'jquery';\r\nlet search = false, filter = false, search2 = false, filter2 = false, srchTerm;\r\nlet both = false, filterFunctionActive = false;\r\nlet activePaymentFilterBoth = [], completePaymentFilterBoth = [], cancelPaymentFilterBoth = [];\r\nlet totalActive, totalComplete, totalCancel, type, filterPaymentTypeActive = false,filtersBoth=false;\r\n\r\nconst PurchaseApprove = () => {\r\n    const [activePayment, setActivePayment] = useState([]);\r\n    const [activePaymentSearch, setActivePaymentSearch] = useState([]);\r\n    const [activePaymentFilter, setActivePaymentFilter] = useState([]);\r\n    const [activePaymentFilter2, setActivePaymentFilter2] = useState([]);\r\n\r\n    const [completePayment, setCompletePayment] = useState([]);\r\n    const [completePaymentFilter, setCompletePaymentFilter] = useState([]);\r\n\r\n    const [cancelledPayment, setCancelledPayment] = useState([]);\r\n    const [cancelledPaymentFilter, setCancelledPaymentFilter] = useState([]);\r\n\r\n    const [paymentFilter, setPaymentFilter] = useState([]);\r\n\r\n    const [allPaymentMethod, setAllPaymentMethod] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n    const checkedIds = [...checked];\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess] = useState(10);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [filters, setFilters] = useState({\r\n        paymentType: []\r\n    })\r\n\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                totalComplete = complete.length\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                totalCancel = cancel.length\r\n            })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n                totalActive = active.length\r\n            })\r\n    }, [activePayment])\r\n\r\n\r\n    const findActivePayment = async() => {\r\n        await findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n            })\r\n    }\r\n\r\n    const findCompletePayment = async() => {\r\n        await findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n            })\r\n    }\r\n\r\n    const findCancelledPayment = async() => {\r\n         await findAllWallet(token)\r\n            .then(response => {\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                if(filterPaymentTypeActive===false){\r\n                     setCancelledPayment(cancel)\r\n                }\r\n            })\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then(res => setAllPaymentMethod(res.data))\r\n    }, [])\r\n\r\n\r\n   \r\n        if (filter2 === true && search2 === true) {\r\n            filtersBoth=true\r\n            const result = completePaymentFilter.filter((item) =>\r\n                item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n            )\r\n            completePaymentFilterBoth = result\r\n    \r\n            const result2 = activePaymentFilter2.filter((item) =>\r\n                item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n            )\r\n            activePaymentFilterBoth = result2\r\n    \r\n            const result3 = cancelledPaymentFilter.filter((item) =>\r\n                item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n                ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n                ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n            )\r\n            cancelPaymentFilterBoth = result3\r\n            both = true\r\n            search = ''\r\n            filter = ''\r\n        }\r\n   \r\n    const handleFilters = (myfilters) => {\r\n        const newFilters = { ...filters };\r\n        newFilters[\"paymentType\"] = myfilters;\r\n        setFilters(newFilters);\r\n        filterTransaction(newFilters)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePaymentFilter(active)\r\n                setActivePaymentFilter2(active)\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                setCompletePaymentFilter(complete)\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                setCancelledPaymentFilter(cancel)\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const filterPaymentType = async () => {\r\n        await handleFilters(checkedIds)\r\n    }\r\n\r\n    const handleToogle = paymentType => () => {\r\n        type = paymentType;\r\n        filterPaymentTypeActive = true\r\n        const foundId = checked.indexOf(paymentType);\r\n        if (foundId === -1) {\r\n            checkedIds.push(paymentType);\r\n        } else {\r\n            checkedIds.splice(foundId, 1);\r\n        }\r\n        if (checkedIds.length === 0) {\r\n            filter = false\r\n            filterPaymentTypeActive = false\r\n            if (srchTerm === undefined) {\r\n                search = false\r\n            }\r\n            else {\r\n                search = true\r\n                both = false\r\n            }\r\n            filter2 = false\r\n        }\r\n        else {\r\n            filter = true\r\n            search = ''\r\n            filter2 = true\r\n            both = false\r\n        }\r\n        setChecked(checkedIds);\r\n        handleFilters(checkedIds)\r\n\r\n    }\r\n\r\n\r\n    const filterPayment = async () => {\r\n        if (srchTerm != undefined) {\r\n            await findAllWallet(token)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const searchPayment = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            search2 = false\r\n            filterFunctionActive = false\r\n        }\r\n        else {\r\n            search = true\r\n            search2 = true\r\n        }\r\n        findAllWallet(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const filterContent = (payments, searchTerm) => {\r\n        const result = payments.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n\r\n        let value = result.filter(filteredData => filteredData.isComplete === true)\r\n        setCompletePayment(value)\r\n\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActivePaymentSearch(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n        setCancelledPayment(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = completePayment.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostsFilterBoths = completePaymentFilterBoth.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = activePayment.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = activePaymentSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilter = activePaymentFilter.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilterBoth = activePaymentFilterBoth.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledPayment.slice(indexOfFirstPostss, indexOfLastPostss);\r\n    const currentPostsFilterBothss = cancelPaymentFilterBoth.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const paginates = pageNumber => setCurrentPages(pageNumber);\r\n    const paginatess = pageNumber => setCurrentPagess(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <div className='mt-3 mb-3 d-flex'>\r\n                    {allPaymentMethod && allPaymentMethod.map(item => (\r\n                        <form>\r\n                            <input type=\"checkbox\" className='ml-2' onChange={handleToogle(item.name)} /> {item.name}\r\n                        </form>\r\n                    ))}\r\n                </div>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchPayment}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total active payments: {totalActive}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tabless activePayment={currentPostsSearch} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filtersBoth={filtersBoth}/>\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tabless activePayment={currentPosts} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} />\r\n                                        </>)}\r\n                                        {filter === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilter} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType} />\r\n                                        </>)}\r\n                                        {both === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilterBoth} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filtersBoth={filtersBoth}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPages}\r\n                                    totalPosts={activePayment.length}\r\n                                    paginate={paginates}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Complete Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total complete payments: {totalComplete}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tables completePayment={currentPost} loading={loading} paginate={currentPage} />\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tables completePayment={currentPostsFilterBoths} loading={loading} paginate={currentPage} />\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPage}\r\n                                    totalPosts={completePayment.length}\r\n                                    paginate={paginate}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total cancelled payments: {totalCancel}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\">Cancel Reason</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tablesss cancelledPayment={currentPostss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType}/>\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tablesss cancelledPayment={currentPostsFilterBothss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} />\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagess}\r\n                                    totalPosts={cancelledPayment.length}\r\n                                    paginate={paginatess}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default PurchaseApprove","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addWallet = (token,data) => {\r\n    return axios.post(`${API}admin/addwallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllWallet = (token) => {\r\n    return axios.get(`${API}admin/addwallet/`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateAddWallet = (token,id,data) => {\r\n    return axios.put(`${API}admin/addwallet/${id}`,data,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findOneWallet = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const findTransactionById = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/transaction/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTransactions = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const filterTransaction = (filters = {}) => {\r\n    const data = {\r\n        filters: { ...filters }\r\n    }\r\n    //console.log(newFilters)\r\n    return axios.post(`${API}admin/addwallet/filter/product`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/addwallet/editAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport {BsPencilSquare} from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({completePayment, loading,  paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {completePayment && completePayment.filter(filteredData => filteredData.isComplete === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginate-1)*10+ index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useEffect, useState } from 'react';\r\nimport moment from \"moment\";\r\nimport { userInfo } from '../utils/auth';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { updateAddWallet } from '../Api/addWallet';\r\nimport { notify } from '../utils/notification';\r\n\r\nconst CancelPurchacheTable = ({ cancelledPayment, loading, paginatess, findActivePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType }) => {\r\n    const { token, id } = userInfo();\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n    const makeActive = (tranId, userId, transactionID) => () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateAddWallet(token, tranId, data)\r\n            .then(res => {\r\n                createNotifications(token, userId, `Your transaction has been reactive for TransactionId:${transactionID}`)\r\n                    .then(async res => {\r\n                        notify('Transaction reactive successfully!')\r\n                        await findCancelledPayment()\r\n                        await findActivePayment()\r\n                        if (filterFunctionActive === true) {\r\n                            await filterPayment()\r\n                        }\r\n                        if (filterPaymentTypeActive === true) {\r\n                            await filterPaymentType()\r\n                        }\r\n\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n                    .catch(res => {\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledPayment && cancelledPayment.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * 10 + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>{item.rejectReason}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(item._id, item.userId?._id, item.transactionID)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CancelPurchacheTable;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const login = (user) => {\r\n    console.log(user)\r\n    return axios.post(`${API}admin/login`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nconst googleLogin = async (code) => {\r\n    return axios.post(`${API}auth/google`, code, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    // console.log(code)\r\n    // return fetch('/api/auth/google', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify({ code }),\r\n    // }).then((res) => {\r\n    //     if (res.ok) {\r\n    //         return res.json();\r\n    //     } else {\r\n    //         return Promise.reject(res);\r\n    //     }\r\n    // });\r\n};\r\n\r\nexport { googleLogin };\r\n\r\nexport const registration = (user) => { \r\n    return axios.post(`${API}admin/register`, user, { \r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nexport const forgotPassword = (user) => {\r\n    return axios.post(`${API}admin/forgotPassword`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport const resetPassword = (user) => {\r\n    const token = user.token\r\n    console.log(user.token)\r\n    return axios.put(`${API}admin/resetPassword/${token}`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/logo.18ca7585.png\";","import * as React from 'react';\r\nimport {styled, alpha} from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert'\r\nimport Logo from \"../../../assets/img/logo.png\"\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {\r\n    AiFillWallet, AiOutlineLogout,\r\n    AiOutlineNotification,\r\n    AiOutlineShoppingCart,\r\n    AiOutlineUser,\r\n    AiOutlineWallet\r\n} from \"react-icons/ai\";\r\nimport {BiSupport} from \"react-icons/bi\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {isAuthenticated, userInfo} from \"../../../utils/auth\";\r\nimport {getNotifications} from \"../../../Api/notification\";\r\nimport {deleteAllProduct, removeJwt, updateUserActiveStatus} from \"../../../Api/user\";\r\nimport {Button} from \"@mui/material\";\r\nimport {getProducts} from \"../../../Api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Search = styled('div')(({theme}) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({theme}) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token, id} = userInfo();\r\n            getNotifications(token, id)\r\n                .then(res => {\r\n                    if (res.data[0]) {\r\n                        setNotifications(res.data[0].notifications)\r\n                        setViewNotifications(res.data[0].view)\r\n                    }\r\n                })\r\n        }\r\n\r\n    }, []);\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        handleMenuClose()\r\n        localStorage.clear()\r\n        history.push({\r\n            pathname: '/'\r\n        });\r\n    }\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem as={Link} to='/profile' eventKey=\"1\" onClick={handleMenuClose}><Link\r\n                to='profile'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineUser/></div>\r\n                    <div className=\"ml-2\"> My Profile</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='userWallet' eventKey=\"2\" onClick={handleMenuClose}><Link\r\n                to='userWallet'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineWallet/></div>\r\n                    <div className=\"ml-2\"> My Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='notification' eventKey=\"2\"><Link\r\n                to='notification'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineNotification/>\r\n                    </div>\r\n                    <div className=\"ml-2\">notification\r\n                        {viewNotifications === false && <>\r\n                            <i className=\"fas fa-circle\" style={{fontSize: \".5rem\", color: \"blue\"}}/>\r\n                        </>}\r\n\r\n                    </div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='confirmation' eventKey=\"3\"><Link\r\n                to='confirmation'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiFillWallet/></div>\r\n                    <div className=\"ml-2\">Add Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='myOrder' eventKey=\"4\"><Link\r\n                to='myOrder'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineShoppingCart/>\r\n                    </div>\r\n                    <div className=\"ml-2\">My Order</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='support' eventKey=\"5\"><Link\r\n                to='support'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><BiSupport/></div>\r\n                    <div className=\"ml-2\">Support</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='/' eventKey=\"6\" onClick={handleMenuClose}><Link\r\n                to='/' onClick={logout}>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineLogout/></div>\r\n                    <div className=\"ml-2\">Logout</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle/>\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProducts(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const [searchBar, setSearchBar] = useState({\r\n        product: ''\r\n    })\r\n    const [products, setProducts] = useState([])\r\n    const {product} = searchBar\r\n\r\n    const handleSearch = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    function setSearchItem(e) {\r\n        setSearchBar({\r\n            ...searchBar,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    let result\r\n    const history = useHistory();\r\n    let redirect = false\r\n    const filterContent = (e) => {\r\n        let searchTerm = product\r\n        result = products.filter((order) =>\r\n            order.gameName && order.gameName.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n\r\n        history.push({\r\n            pathname: '/search-result',\r\n            state: result\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            {redirect && <Redirect to='/search-result'\r\n            ><Search data={result}/></Redirect>}\r\n            <AppBar position=\"static\" style={{backgroundColor: '#004d25'}}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        sx={{mr: 2, flexGrow:.1}}\r\n                        as={Link} to='/'\r\n                    >\r\n                        <img src={Logo} alt='ads' width='100px'/>\r\n                    </IconButton>\r\n                    <Box sx={{flexGrow: 1}} className=\" px-12 hidden md:block\">\r\n                        <div className=\"w-full\">\r\n                            <form onSubmit={handleSearch}>\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <input type=\"text\"\r\n                                           style={{borderColor: \"white\"}}\r\n                                           placeholder=\"Search..\"\r\n                                           className=\"w-full border-[3px] rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none\"\r\n                                        //className=\"w-full border-[3px] border-primary-500 rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none focus:border-primary-300\"\r\n                                           name=\"product\" value={product}\r\n                                           onChange={(e) => setSearchItem(e)}/>\r\n                                    <input type=\"submit\" value=\"Search\"\r\n                                           style={{backgroundColor: '#004d25', border: '2px solid white'}}\r\n                                           className=\"absolute top-1/2 right-[2px] -translate-y-1/2 w-[100px]  duration-100  flex items-center  justify-center text-white font-normal text-lg cursor-pointer abc \"\r\n                                           onClick={e => filterContent(e)}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Box>\r\n                    <Box sx={{display: {xs: 'none', md: 'flex'}, flexGrow: .05}}>\r\n                        {!isAuthenticated() && (<Box style={{position: \"relative\", right: '0%'}}>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 50}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/login' aria-current=\"page\"\r\n                                                                          data-v-70c6da4e>Login </Link></Button>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 20}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/registration' data-v-70c6da4e>Sign\r\n                                Up </Link></Button>\r\n                        </Box>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: {xs: 'flex', md: 'none', marginLeft: 120}, flexGrow: 1}}>\r\n\r\n                        {!isAuthenticated() && (<>\r\n                            <li className=\"hidden xs:block\" data-v-70c6da4e>\r\n                                <Link to='/login' aria-current=\"page\" data-v-70c6da4e>Login </Link>\r\n                            </li>\r\n                            <li data-v-70c6da4e><Link to='/registration' data-v-70c6da4e>Sign Up </Link>\r\n                            </li>\r\n                        </>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                sx={{flexGrow: 1}}\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </Box>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getSupportMessage, markSupport } from '../Api/support'\r\nimport { userInfo } from '../utils/auth';\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { notify } from '../utils/notification';\r\n\r\nfunction Support() {\r\n    const [support, setSupport] = useState([]);\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        getSupportMessage(token)\r\n            .then(res => setSupport(res.data))\r\n    }, [support])\r\n\r\n\r\n    const markResolved = (id) =>()=> {\r\n        markSupport(id)\r\n            .catch(err => {\r\n                notify('Something went wrong!')\r\n            })\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {support && support.map((data, index) => (\r\n                <Card key={index}>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>Name: {data.name}</p>\r\n                                <p>Email: {data.email}</p>\r\n                                <p>Phone No: {data.phone}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <p>requestType: {data.requestType}</p>\r\n                                <p>Message: {data.requestDescription}</p>\r\n                                <p>Date :{moment(data.createdAt).format('MMMM Do, YYYY, h:mm:ss a')}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"font-bold\">Status</div>\r\n                                {data.active === true && (<>\r\n                                    <Button variant=\"danger\" onClick={markResolved(data._id)}>Mark as Resolved</Button>\r\n                                </>)}\r\n                                {data.active === false && (<>\r\n                                    <div style={{ color: '#01bf71',fontWeight:\"bold\" }}>Resolved</div>\r\n                                </>)}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Support;\r\n","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Orders from \"views/Orders\";\r\nimport Utility from \"views/Utility\";\r\nimport Products from \"./views/Products\";\r\nimport OrderHandle from \"./views/OrderHandle\";\r\nimport PurchaseApprove from \"./views/PurchaseApprove\";\r\nimport UserCreate from './views/UserCreate';\r\nimport Support from './views/Support';\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/createUser\",\r\n    name: \"User Create\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: UserCreate,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"Admin Profile\",\r\n    icon: \"nc-icon nc-circle-09\",\r\n    component: UserProfile,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/table\",\r\n    name: \"Table List\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: TableList,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/product\",\r\n    name: \"Products\",\r\n    icon: \"nc-icon nc-paper-2\",\r\n    component: Products,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/orders\",\r\n    name: \"Orders\",\r\n    icon: \"nc-icon nc-atom\",\r\n    component: Orders,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/purchase\",\r\n    name: \"Approval Purchase\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: PurchaseApprove,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/handleOrder\",\r\n    name: \"Handle Order\",\r\n    icon: \"nc-icon nc-bell-55\",\r\n    component: OrderHandle,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/utility\",\r\n    name: \"Utility\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Utility,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    name: \"Support\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Support,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;","import React, { useState } from 'react';\r\nimport { registration } from '../Api/auth';\r\nimport \"../components/User/User.css\"\r\nimport { notify } from '../utils/notification'\r\nimport NavBar from \"../layouts/NavBar\";\r\nimport Footer from \"../components/Main/Footer\";\r\nimport animationData from \"../assets/lotte/50124-user-profile.json\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nconst setPasswordAlert = () => {\r\n    notify('Password Miss-matched')\r\n}\r\n\r\nfunction UserCreate() {\r\n\r\n    const [user, setUser] = useState('');\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phonenumber: '',\r\n        password: '',\r\n        role: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false\r\n    });\r\n\r\n    const { username, email, password, phonenumber, role, success,disabled, error, repassword } = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if (e.target.name === 'role') {\r\n            setUser(e.target.value)\r\n        }\r\n        console.log(e.target.name,e.target.value)\r\n    }\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error: false,disabled: true });\r\n        if (password === repassword) {\r\n            registration({ username, email, phonenumber, role, password })\r\n                .then(response => {\r\n                    notify(`${role[0].toUpperCase() + role.slice(1)} created Successfully`)\r\n                    setValues({\r\n                        username: '',\r\n                        email: '',\r\n                        phonenumber: '',\r\n                        password: '',\r\n                        repassword: '',\r\n                        success: true,\r\n                        error: false,\r\n                        disabled: false,\r\n                    })\r\n                    setUser({\r\n                        user: ''\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    let errMsg = 'Something went wrong!';\r\n                    if (err.response) {\r\n                        errMsg = err.response.data;\r\n                    } else {\r\n                        errMsg = 'Something went wrong!';\r\n                    }\r\n                    setValues({ ...values, error: errMsg,disabled: false, })\r\n                })\r\n        }\r\n        else {\r\n            setPasswordAlert()\r\n        }\r\n\r\n    }\r\n\r\n    const signUpForm = () => (\r\n        <>\r\n           \r\n            <div className=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <div data-v-791b20d9>\r\n                        <div\r\n                            className=\"min-w-screen bg-gray-200 flex items-center justify-center md:px-5 py-10 md:py-6\">\r\n                            <div className=\"bg-white text-gray-500 w-full overflow-hidden\">\r\n                                <div className=\"md:flex w-full\">\r\n\r\n                                    <div className=\"w-full md:w-2/3 py-10 px-5 md:px-10 relative\">\r\n                                        <div className=\"text-center mb-10\">\r\n                                            <h1 className=\"text-xl md:text-2xl font-bold leading-tight text-gray-900 text-left\">\r\n                                                Create new User\r\n                                            </h1>\r\n                                        </div>\r\n\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <div className=\"flex -mx-3 flex-wrap\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Username</label> <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter Username\" autoFocus=\"autofocus\" autoComplete\r\n                                                        name=\"username\"\r\n                                                        value={username}\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Phone Number</label> <input\r\n                                                        placeholder=\"Phone Number\" autoFocus=\"autofocus\" autoComplete\r\n                                                        type=\"tel\" value={phonenumber} name=\"phonenumber\"\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Email</label> <input\r\n                                                        type=\"email\"\r\n                                                        placeholder=\"Enter Email\" autoComplete value={email}\r\n                                                        name=\"email\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Role</label>\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"admin\" checked={user === 'admin'} onChange={handleChange} />Admin\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"user\" checked={user === 'user'} className='ml-3' onChange={handleChange} />User\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex flex-wrap -mx-3\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Password</label> <input\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Enter Password\" autoComplete value={password}\r\n                                                        name=\"password\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Confirm Password</label>\r\n                                                        <input type=\"password\"\r\n                                                            placeholder=\"Re Enter Password\" autoComplete value={repassword}\r\n                                                            name=\"repassword\" required onChange={handleChange}\r\n                                                            className=\"tw_form_input\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <button type=\"submit\" disabled={disabled} className=\"w-full block bg-primary-500 hover:bg-primary-400 focus:bg-primary-400 text-white font-semibold rounded-lg px-4 py-3 mt-6\">\r\n                                                        Create User\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div style={{marginTop : \"100Px\"}}>\r\n                                        <Lottie\r\n                                            options={defaultOptions}\r\n                                            height={500}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n\r\n    const showError = (error) => {\r\n        if (error) return (\r\n            notify(`${error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showError(error)}\r\n            {signUpForm()}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCreate;\r\n","import axios from \"axios\";\r\n\r\nimport { API } from \"../utils/config\";\r\n\r\nexport const createSupport = (token, id, data) => {\r\n    console.log(token, id, data)\r\n    return axios.post(`${API}support/${id}`, data, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getSupportMessage = (token) => {\r\n    return axios.get(`${API}support/`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const markSupport = (id) => {\r\n    return axios.put(`${API}support/${id}`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    })\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\r\n\r\nimport routes from \"routes.js\";\r\nimport { userInfo } from '../../utils/auth';\r\nimport { deleteAllProduct } from \"../../Api/user\";\r\nimport { updateUserActiveStatus } from \"../../Api/user\";\r\nimport { getNotifications,editNotifications } from '../../Api/notification'\r\nimport {removeJwt} from \"../../Api/user\";\r\n\r\nfunction Header() {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const { token, id } = userInfo();\r\n    const location = useLocation();\r\n    const mobileSidebarToggle = (e) => {\r\n        e.preventDefault();\r\n        document.documentElement.classList.toggle(\"nav-open\");\r\n        const node = document.createElement(\"div\");\r\n        node.id = \"bodyClick\";\r\n        node.onclick = function () {\r\n            this.parentElement.removeChild(this);\r\n            document.documentElement.classList.toggle(\"nav-open\");\r\n        };\r\n        document.body.appendChild(node);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotifications(token, id)\r\n            .then(res => {\r\n                if (res.data[0]) {\r\n                    setNotifications(res.data[0].notifications)\r\n                    setViewNotifications(res.data[0].view)\r\n                }\r\n            })\r\n    }, [notifications]);\r\n\r\n\r\n    const getBrandText = () => {\r\n        for (let i = 0; i < routes.length; i++) {\r\n            if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n                return routes[i].name;\r\n            }\r\n        }\r\n        return \"Brand\";\r\n    };\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        localStorage.clear()\r\n    }\r\n\r\n    const viewNotification=()=>{\r\n        editNotifications(token,id)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container fluid>\r\n                <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\r\n                        onClick={mobileSidebarToggle}\r\n                    >\r\n                        <i className=\"fas fa-ellipsis-v\" />\r\n                    </Button>\r\n                    <Navbar.Brand\r\n                        href=\"#home\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        className=\"mr-2\"\r\n                    >\r\n                        {getBrandText()}\r\n                    </Navbar.Brand>\r\n                </div>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"nav mr-auto\" navbar>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                data-toggle=\"dropdown\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                                className=\"m-0\"\r\n                            >\r\n                                <i className=\"nc-icon nc-palette\" />\r\n                                <span className=\"d-lg-none ml-1\">Dashboard</span>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Dropdown as={Nav.Item}>\r\n                            <Dropdown.Toggle\r\n                                as={Nav.Link}\r\n                                data-toggle=\"dropdown\"\r\n                                id=\"dropdown-67443507\"\r\n                                variant=\"default\"\r\n                                className=\"m-0\"\r\n                                \r\n                            >\r\n                                <i className=\"nc-icon nc-planet\" onClick={viewNotification}/>\r\n                                {viewNotifications === false && <>\r\n                                    <span className=\"notification\"></span>\r\n                                    \r\n                                </>}\r\n                                <span className=\"d-lg-none ml-1\" >Notification</span>\r\n\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                {notifications && notifications.map((notification, index) => (\r\n                                    <Dropdown.Item >\r\n                                        {notification}\r\n                                    </Dropdown.Item>\r\n                                ))}\r\n\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                onClick={(e) => logout(e)}\r\n\r\n                            >\r\n                                <Link to=\"/\" className=\"no-icon\">Log out</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer px-0 px-lg-3\">\r\n        <Container fluid>\r\n          <nav>\r\n            {/*<ul className=\"footer-menu\">*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Home*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Company*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Portfolio*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Blog*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*</ul>*/}\r\n            <p className=\"copyright text-center\">\r\n              © {new Date().getFullYear()}{\" \"}\r\n              <a href=\"https://www.bengalsoftware.com/\">Bengal Software</a>, made with\r\n              love for a better web\r\n            </p>\r\n          </nav>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","\r\nimport React, { Component } from \"react\";\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nimport logo from \"assets/img/reactlogo.png\";\r\n\r\nfunction Sidebar({ color, image, routes }) {\r\n  const location = useLocation();\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n  return (\r\n    <div className=\"sidebar\" data-image={image} data-color={color}>\r\n      <div\r\n        className=\"sidebar-background\"\r\n        style={{\r\n          backgroundImage: \"url(\" + image + \")\",\r\n        }}\r\n      />\r\n      <div className=\"sidebar-wrapper\">\r\n        <div className=\"logo d-flex align-items-center justify-content-start\">\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini mx-1\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              {/*<img*/}\r\n              {/*  src=\"#\"*/}\r\n              {/*  alt=\"logo\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n          </a>\r\n          <a className=\"simple-text\" href=\"https://www.bengalsoftware.com\" target=\"_blank\">\r\n            Cizishop\r\n          </a>\r\n        </div>\r\n        <Nav>\r\n          {routes.map((prop, key) => {\r\n            if (!prop.redirect)\r\n              return (\r\n                <li\r\n                  className={\r\n                    prop.upgrade\r\n                      ? \"active active-pro\"\r\n                      : activeRoute(prop.layout + prop.path)\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            return null;\r\n          })}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/sidebar-3.9992d0ce.jpg\";","\r\nimport React, { Component,useEffect } from \"react\";\r\n\r\nimport { useLocation, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\r\n\r\nfunction Admin() {\r\n  \r\n  useEffect(() => {\r\n    localStorage.removeItem('values');\r\n  }, []);\r\n\r\n  const [image, setImage] = React.useState(sidebarImage);\r\n  const [color, setColor] = React.useState(\"black\");\r\n  const [hasImage, setHasImage] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanel = React.useRef(null);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => <prop.component {...props} />}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainPanel.current.scrollTop = 0;\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      const element = document.getElementById(\"bodyClick\");\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\r\n        <div className=\"main-panel\" ref={mainPanel}>\r\n          <AdminNavbar />\r\n          <div className=\"content\">\r\n            <Switch>{getRoutes(routes)}</Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n      {/*<FixedPlugin*/}\r\n      {/*  hasImage={hasImage}*/}\r\n      {/*  setHasImage={() => setHasImage(!hasImage)}*/}\r\n      {/*  color={color}*/}\r\n      {/*  setColor={(color) => setColor(color)}*/}\r\n      {/*  image={image}*/}\r\n      {/*  setImage={(image) => setImage(image)}*/}\r\n      {/*/>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated ,userInfo} from '../../utils/auth';\r\n\r\nconst AdminRoute = ({ children, ...rest }) => { \r\n    const {role}=userInfo();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated() && role==='admin' || role==='superadmin'? (\r\n                    children \r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;","export default __webpack_public_path__ + \"static/media/3930.461e59fc.jpg\";","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Col, Form, Row, Button} from \"react-bootstrap\";\r\nimport \"./gameinfo.css\"\r\nimport styled from 'styled-components';\r\nimport {isAuthenticated} from '../../../../utils/auth';\r\nimport {getOneUser} from '../../../../Api/user';\r\nimport {userInfo} from '../../../../utils/auth';\r\nimport NotificationModal from './NotificationModal';\r\nimport {updateWallet, getWalletById} from '../../../../Api/wallet';\r\nimport {createNewPurchase} from '../../../../Api/purchase';\r\nimport {createNewOrder} from '../../../../Api/order';\r\nimport {notify} from '../../../../utils/notification'\r\nimport {getOneProduct} from \"../../../../Api/products\";\r\nimport Logo2 from \"../../../../assets/img/logo.png\";\r\nimport {createNotifications} from '../../../../Api/notification'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet activeIdCode = false;\r\nlet activeError = false;\r\n\r\nconst Buttons = styled.button`\r\n  background-color: #28af3a;\r\n  color: whitesmoke;\r\n  font-size: 15px;\r\n  padding: 5px 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  width: 250px;\r\n  min-height: 50px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media screen and (max-width: 882px) {\r\n    padding: 5px 20px;\r\n    margin-top: 2px;\r\n    width: 150px;\r\n    font-size: 13px;\r\n  }\r\n  @media screen and (max-width: 640px) {\r\n    padding: 5px 20px;\r\n    margin-top: 2px;\r\n    width: 120px;\r\n    font-size: 10px;\r\n  }\r\n  &:disabled {\r\n    color: #28af3a;\r\n    background-color: white;\r\n    opacity: 1;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled(Buttons)`\r\n  color: #28af3a;\r\n  background-color: white;\r\n  border: 1px solid #28af3a;\r\n  ${({active}) =>\r\n          active &&\r\n          `\r\n    color: white;\r\n    background-color: #28af3a;\r\n    \r\n  `}\r\n`;\r\n\r\n\r\nconst account = [\r\n    {\r\n        type: \"Facebook\"\r\n    },\r\n    {\r\n        type: \"Google\"\r\n    }\r\n]\r\n\r\n\r\nconst GameInfo = (props) => {\r\n    const [accountSelect, setAccountType] = useState({\r\n            accountType: ''\r\n        }\r\n    )\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [form, setForm] = useState({})\r\n    const [user, setUser] = useState({})\r\n    const [topUp, setTopUP] = useState([])\r\n    const [active, setActive] = useState(topUp[0]);\r\n    const idData = useParams()\r\n    const sid = idData.id\r\n    const productId = idData.productId\r\n    const {accountName} = account\r\n    const [show, setShow] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const [isWallet, setIsWallet] = useState(false);\r\n    const [walletId, setWalletId] = useState('');\r\n    const [balance, setBalance] = useState({});\r\n    const [recharge, setRecharge] = useState(0);\r\n    const [caategoryType, setcategoryType] = useState({})\r\n    const [productInfo, setProductInfo] = useState({})\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [buttonDisabled, setButtonDisabled] = useState({\r\n        disabled: false\r\n    })\r\n\r\n    const {disabled} = buttonDisabled;\r\n\r\n    function handleOption(e) {\r\n        setAccountType({\r\n            ...accountSelect,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n        console.log(accountSelect)\r\n    }\r\n\r\n\r\n    function func2(option, price) {\r\n        setValues({\r\n            ...values,\r\n            product: {\r\n                [option]: price\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    function addBalance() {\r\n        history.push({\r\n            pathname: '/confirmation',\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        activeIdCode = false;\r\n        getOneProduct(productId)\r\n            .then((res) => {\r\n                let allData = res.data.categoryName\r\n                setcategoryType(allData)\r\n                setProductInfo(res)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token, id} = userInfo();\r\n            getOneUser(id)\r\n                .then(response => {\r\n                    setUser(response.data), setWalletId(response.data.wallet)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                });\r\n        }\r\n\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token} = userInfo();\r\n            getWalletById(token, walletId)\r\n                .then(response => setBalance(response.data))\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                });\r\n        }\r\n    }, [walletId]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOneProduct(idData.productId)\r\n            .then((res) => {\r\n                setTopUP(res.data.topUp)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        productId: productId,\r\n        accountType: '',\r\n        Number: '',\r\n        Password: '',\r\n        backupCode: '',\r\n        idCode: '',\r\n        product: {}\r\n    });\r\n\r\n    let {accountType, Number, Password, backupCode, product, idCode} = values;\r\n\r\n    const handleChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n\r\n        if (Object.keys(values.product).length === 0) {\r\n            activeError = true\r\n        } else {\r\n            values.idCodeActive = activeIdCode\r\n\r\n            setButtonDisabled({\r\n                disabled: true\r\n            })\r\n            if (!isAuthenticated()) {\r\n\r\n                history.push({\r\n                    pathname: '/login',\r\n                });\r\n                //test.bdsell.net\r\n\r\n                history.push({pathname: '/login'});\r\n            }\r\n            if (user && user.wallet === null) {\r\n                handleShow()\r\n                setMsg('Do You want to create your wallet?')\r\n\r\n            }\r\n\r\n            let amount = 0\r\n            for (let x in product) {\r\n                amount = product[x]\r\n            }\r\n            let spent = amount\r\n\r\n            if (user && user.wallet != null) {\r\n                if (balance.currentAmount < amount) {\r\n                    const due = amount - balance.currentAmount\r\n                    setIsWallet(true)\r\n                    setButtonDisabled({\r\n                        disabled: false\r\n                    })\r\n                    setMsg(`You Need ${due} taka more to purchase the product. Do you want to recharge?`)\r\n                    handleShow()\r\n                } else {\r\n                    const {token, id,} = userInfo();\r\n                    createNewPurchase(token, values)\r\n                        .then(response => {\r\n                            const data = {\r\n                                userId: id,\r\n                                purchaseId: response.data.purchase._id,\r\n                                productId: response.data.purchase.productId,\r\n                                walletId: user.wallet,\r\n                                paymentComplete: true\r\n                            }\r\n                            createNewOrder(token, data)\r\n                                .then(response => {\r\n                                    const amount = 0\r\n                                    updateWallet(token, user.wallet, amount, spent)\r\n                                        .then(res => {\r\n                                            notify('Order Created. Please wait for admin approval')\r\n                                            createNotifications(token, id, `You have placed an order on ${productInfo.data.gameName}. Purchase Package: ${(Object.keys(values.product))[0]} ${((Object.values(values.product))[0])} Taka. Order Date:  ${moment().format('MMMM Do YYYY, h:mm a')}. Please wait for admin approval`)\r\n                                            history.push('/myOrder')\r\n                                        })\r\n                                })\r\n                                .catch(err => {\r\n                                    setTimeout(reloadPage, 2000)\r\n                                    notify('Something Failed! Please try again')\r\n                                })\r\n                        })\r\n                        .catch(err => {\r\n                            let errMsg = \"Something went wrong!\";\r\n                            if (err.response) errMsg = err.response.data;\r\n                            notify(errMsg)\r\n                            setTimeout(reloadPage, 2000)\r\n                        })\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const reloadPage = () => {\r\n        window.location.reload(false)\r\n    }\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n    }\r\n    const accountTypeExist = () => {\r\n        if (accountType) {\r\n            return (\r\n                <>\r\n                    <Form.Label>Backup Code</Form.Label>\r\n                    <Form.Control placeholder=\"Backup Code\" name=\"backupCode\" value={backupCode}\r\n                                  onChange={handleChange}/>\r\n                    <div className=\"p-1 d-flex justify-content-lg-end\"><a style={{color: 'red'}}\r\n                                                                          href={productInfo.data?.backUpLink}\r\n                                                                          target=\"_blank\" rel=\"noopener noreferrer\">How\r\n                        To Get Backup Code</a></div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    function accountTypeChange() {\r\n        if (caategoryType === \"(IDCode)\") {\r\n            activeIdCode = true\r\n            return (\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <div><label className=\"block text-gray-700\">Enter Player ID</label>\r\n                            <input onkeyup=\"value=isNaN(parseFloat(value))||value<0||value>9000?1000:value\"\r\n                                   type=\"number\" name=\"idCode\" className=\"form-control\" placeholder=\"Enter Player ID\"\r\n                                   value={idCode}\r\n                                   required onChange={handleChange} autoFocus=\"autofocus\"\r\n                                   autoComplete={true}\r\n                                   className=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        } else {\r\n            return (\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>Account Type</Form.Label>\r\n                                <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                              value={accountType} name=\"accountType\" onChange={handleChange}>\r\n                                    <option>Select an account type</option>\r\n                                    {\r\n                                        account.map((data, index) => {\r\n                                                return (\r\n                                                    <option key={index}>{data.type}</option>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>{accountType} Account\r\n\r\n                                </Form.Label>\r\n                                <Form.Control placeholder={`${accountType} account`} name=\"Number\" value={Number}\r\n                                              onChange={e => {\r\n                                                  handleChange(e);\r\n                                                  setField('name', e.target.value)\r\n                                              }} required/>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control placeholder=\"Password\" name=\"Password\" value={Password}\r\n                                              onChange={handleChange}/>\r\n                            </Col>\r\n                        </Row>\r\n                        {accountTypeExist()}\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NotificationModal show={show} msg={msg} handleClose={handleClose} addBalance={addBalance}/>\r\n            <div as={Form}>\r\n                {accountTypeChange()}\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <Form.Label>Select Recharge</Form.Label>\r\n\r\n                        <div style={{display: \"flex\", flexWrap: \"wrap\", textAlign: \"center\", justifyContent: \"center\"}}>\r\n                            {topUp && topUp.map((product, index) => {\r\n                                return (\r\n                                    <ButtonToggle key={product._id}\r\n                                                  active={active === product._id}\r\n                                                  onClick={function (event) {\r\n                                                      setActive(product._id);\r\n                                                      func2(product.option, product.price)\r\n                                                  }}\r\n                                                  variant=\"outline-primary\">\r\n                                        <div className='d-flex justify-content-center font-bold text-center'>\r\n                                            <div>\r\n                                                {product.option}\r\n                                            </div>\r\n                                            <div className=\"text-red ml-2\">BDT{product.price}</div>\r\n                                        </div>\r\n                                    </ButtonToggle>\r\n                                )\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                        {activeError === true && (<>\r\n                            <p style={{color: \"red\", marginLeft: \"5px\"}}>Please select a package</p>\r\n                        </>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form.Label>Select Wallet</Form.Label>\r\n                        <div className=\"d-flex justify-content-center \" >\r\n                            <Card>\r\n                                <Card.Body style={{backgroundColor : '#004d25', color: 'white'}}>\r\n                                    <img width='95px' src={Logo2} alt=\"sizishop\"/>\r\n                                    PipoBazar Wallet\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div className='d-flex justify-content-end'>\r\n                    <Button style={{backgroundColor: '#004d25', borderColor: '#004d25' }} data={values} disabled={disabled} className=\"d-flex justify-content-center\"\r\n                            onClick={handleSubmit}>Submit</Button>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default GameInfo","import { useState, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { login } from '../../Api/auth'\r\nimport { isAuthenticated,authenticate } from '../../utils/auth';\r\nimport {\r\n    AiOutlineGoogle,\r\n    AiFillFacebook,\r\n} from \"react-icons/ai\";\r\n\r\nimport './User.css';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { notify } from '../../utils/notification'\r\nlet jwt = null;\r\nimport { getJwt, removeJwt } from \"../../Api/user\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    useEffect(()=> {\r\n        if(isAuthenticated()){\r\n            history.push({pathname: '/admin'})\r\n        }\r\n    })\r\n\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getJwt()\r\n            .then(res => {\r\n                jwt = res.data\r\n                getJwtToken()\r\n            })\r\n    });\r\n\r\n\r\n    const getJwtToken = () => {\r\n        if (jwt) {\r\n            authenticate(jwt, () => {\r\n                let jwtToken = localStorage.getItem('jwt')\r\n                if (jwtToken) {\r\n                    return (\r\n                        setValues({\r\n                            ...values,\r\n                            success: true,\r\n                            error: false,\r\n                        })\r\n                    )\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const { email, password, success, error, disabled } = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error: false, disabled: true })\r\n        login({ email, password })\r\n            .then(response => {\r\n                authenticate(response.data.token, () => {\r\n                    setValues({\r\n                        email: '',\r\n                        password: '',\r\n                        success: true,\r\n                        error: false,\r\n                        disabled: false,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => {\r\n                let errMsg = 'Something went wrong!';\r\n                if (err.response) {\r\n                    errMsg = err.response.data;\r\n                } else {\r\n                    errMsg = 'Something went wrong!';\r\n                }\r\n                setValues({ ...values, error: errMsg, disabled: false })\r\n            })\r\n    }\r\n\r\n    const LoginForm = () => (\r\n        <>\r\n            {/*<NavBar />*/}\r\n            <div class=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <section class=\"flex flex-col md:flex-row items-center md:justify-center py-10 md:py-6\" data-v-791b20d9>\r\n                        <div class=\"bg-white w-full md:w-[450px] px-6 lg:px-8 flex items-start py-12 justify-center relative flex-shrink\">\r\n                            <div class=\"w-full h-full\">\r\n                                <h1 class=\"text-xl md:text-2xl font-bold leading-tight\">\r\n                                    Log in to Admin Dashboard\r\n                                </h1>\r\n                                <Form onSubmit={handleSubmit} method=\"post\" class=\"mt-6\">\r\n                                    <div><label class=\"block text-gray-700\">Email Address</label>\r\n                                        <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Email\" value={email} required onChange={handleChange} autofocus=\"autofocus\"\r\n                                            autoComplete\r\n                                            class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"mt-4\"><label class=\"block text-gray-700\">Password</label> <input\r\n                                        type=\"password\" name=\"password\" className=\"form-control\" value={password} required onChange={handleChange} placeholder=\"Enter Password\" class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500\r\n            focus:bg-white focus:outline-none\"/></div>\r\n\r\n                                    <div class=\"text-right mt-2\"><Link to=\"forgotPassword\"\r\n                                        class=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot\r\n                                        Password?</Link></div>\r\n                                    <button style={{backgroundColor: '#004d25', borderColor: '#004d25' }} onSubmit={handleSubmit} disabled={disabled} type=\"submit\" class=\"w-full block   0 text-white font-semibold rounded-lg\r\n          px-4 py-3 mt-6\">\r\n                                        Login\r\n                                    </button>\r\n                                    <div className=\"flex-c-m\">\r\n                                        <div style={{ fontWeight: \"bold\" }}>Login with </div>\r\n                                        {/* <a href=\"http://localhost:3001/auth/facebook\" className=\"login100-social-item bg3\">\r\n                                            <AiOutlineGoogle />\r\n                                        </a> */}\r\n\r\n                                        <a href=\"https://cizishop-backend2334.herokuapp.com/auth/google\" style={{color: '#004d25', borderColor: '#004d25'}} className=\"login100-social-item \">\r\n                                            <AiOutlineGoogle  />\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                </Form>\r\n                                <hr class=\"my-6 border-gray-300 w-full\" />\r\n\r\n                                <p class=\"mt-5 text-center \">\r\n                                    Need an account?\r\n                                    <Link to='registration'\r\n                                          style={{color : '#004d25'}}\r\n                                        class=\"text-primary-500 hover:text-primary-700 font-semibold ml-2\">Create an\r\n                                        account</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            {/*<Footer />*/}\r\n        </>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    const showError = (error) => {\r\n        if (error.success === false) return (\r\n            notify(`${error.error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isAuthenticated() ? <Redirect to=\"/admin\" /> : \"\"}\r\n            {showSuccess()}\r\n            {showError(error)}\r\n            {LoginForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import LoginForm from '../components/User/Login';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <LoginForm/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Login;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Badge, Card, Col, Container, Form, ListGroup, Row } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { addWallet } from '../../../Api/addWallet';\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { getOneUser } from '../../../Api/user';\r\nimport { createNewPurchase } from '../../../Api/purchase';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { notify } from '../../../utils/notification'\r\nimport Footer from \"../Footer\";\r\nimport NavBar from \"../Navbar/Navbar\";\r\nimport \"./conformation.css\"\r\nimport { CgEditBlackPoint } from \"react-icons/cg\"\r\nimport { createNewOrder, orderQueue } from '../../../Api/order';\r\nimport { createWallet } from '../../../Api/wallet';\r\nimport { findAllPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { createNotifications } from '../../../Api/notification'\r\nimport { getOneProduct } from \"../../../Api/products\";\r\nimport { useHistory } from \"react-router-dom\";\r\nlet productPackage, productPrice, paymentNumber, paymentOption;\r\n\r\n\r\nconst moneySendWay = [\r\n  {\r\n    \"how\": \"টাকা যোগ করবেন কীভাবে?\",\r\n    \"condition\": \"(যেকোন পার্সোনাল বিকাশ একাউন্ট হতে হবে)\",\r\n    \"Step1\": [\r\n      {\r\n        \"point\": \"প্রথমে উপরে দেওয়া নাম্বার কপি করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"(bKash,Nagad,Rocket, upay) App অথাবা Ussd কোডের মধ্যেমে\"\r\n      },\r\n      {\r\n        \"point\": \"সেন্ড মানি অপশন সিলেক্ট করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"Cizishop WALLET নাম্বার (_) প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"রেফারেন্সে আপনার সেলফটেন ইউজার আইডি প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"আপনার বিকাশ পিন নাম্বার প্রবেশ করুণ।\"\r\n      },\r\n    ],\r\n    \"Step2\": [\r\n      {\r\n        \"point\": \"পনিচে যে দুটি বক্স দেখতে পারছেন প্রথম Box এ কত টাকা পাঠিয়েছেন সেটা লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"দ্বিতীয় বক্সে আপনি যে নাম্বার থেকে টাকা পাঠিয়েছেন সেই নাম্বারটি লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"তারপর Submit অপশনে ক্লিক করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"পাঁচ থেকে দশ মিনিটের মধ্যে টাকা যোগ হয়ে যাবে আপনার সেলফটেন ওয়ালেটে।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"অবশ্যই টাকা Send Money করার পর এই কাজটি করবেন।\"\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\n\r\nconst Button = styled.button`\r\n  background-color: #28af3a ;\r\n  color: whitesmoke;\r\n  font-size: 15px;\r\n  padding: 5px 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  object-fit: contain;\r\n  &:disabled {\r\n    color: #28af3a;\r\n    background-color: white;\r\n    opacity: 1;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  color: #28af3a;\r\n  background-color: white;\r\n  border: 1px solid #28af3a;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    color: white;\r\n    background-color: #28af3a;\r\n    \r\n  `}\r\n`;\r\n\r\n\r\nconst Confirm = () => {\r\n  let history = useHistory();\r\n  const [productInfo, setProductInfo] = useState({})\r\n  const [paymentMethod, setPaymentMethod] = useState([{\r\n    name: '',\r\n    number: '',\r\n    image: ''\r\n  }])\r\n  const [user, setUser] = useState({})\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [values, setValues] = useState({\r\n    walletId: '',\r\n    paymentType: '',\r\n    transactionID: '',\r\n    mobileNumber: '',\r\n    amount: '',\r\n  });\r\n\r\n  const [rechargeId, setRechargeId] = useState({\r\n    rechargeId: '',\r\n  });\r\n\r\n\r\n  const { paymentType, transactionID, mobileNumber, amount } = values;\r\n\r\n  const [disabledButton, setDisabledButton] = useState({\r\n    disabled: false,\r\n  });\r\n\r\n  const { disabled } = disabledButton\r\n\r\n  useEffect(() => {\r\n    getOneUser(id)\r\n      .then(response => setUser(response.data))\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, [values]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    findAllPaymentMethod()\r\n      .then((res) => {\r\n        let allData = res.data\r\n        setPaymentMethod(allData)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    if (data) {\r\n      getOneProduct(data.productId)\r\n        .then(res => setProductInfo(res.data))\r\n    }\r\n  }, []);\r\n\r\n\r\n  const [confirmation, setConfirmation] = useState({});\r\n\r\n  const [active, setActive] = useState({});\r\n  const { token, id } = userInfo();\r\n\r\n  function func2(paymentType) {\r\n    setValues({\r\n      ...values,\r\n      paymentType: paymentType\r\n    })\r\n  }\r\n\r\n  function handleClick(e) {\r\n    setActive({\r\n      ...payMethod,\r\n      [e.target.name]: e.target.value,\r\n\r\n    })\r\n  }\r\n\r\n  function createOrder() {\r\n    handleClose()\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    productPackage = (Object.keys(data.product))[0]\r\n    productPrice = (Object.values(data.product))[0]\r\n    createNewPurchase(token, data)\r\n      .then(response => {\r\n        const data = {\r\n          userId: id,\r\n          purchaseId: response.data.purchase._id,\r\n          productId: response.data.purchase.productId,\r\n          walletId: values.walletId,\r\n          rechargeId: rechargeId.rechargeId\r\n        }\r\n        createNewOrder(token, data)\r\n          .then(response => {\r\n            notify('Order Created. Please wait for admin approval')\r\n            //orderQueue()\r\n            createNotifications(token, id, `You have placed an order on ${productInfo.gameName}. Purchase Package: ${productPackage} ${productPrice} Taka. Please wait for admin approval`)\r\n            localStorage.removeItem('values');\r\n          })\r\n          .catch(err => notify('Something Failed! Please try again'))\r\n      })\r\n      .catch(err => {\r\n        let errMsg = \"Something went wrong!\";\r\n        if (err.response) errMsg = err.response.data;\r\n        notify(errMsg)\r\n      })\r\n  }\r\n\r\n  function addRecharge(rechargeId) {\r\n    setRechargeId({\r\n      rechargeId: rechargeId\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      walletId: user.wallet,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDisabledButton({ disabled: true });\r\n    if (paymentNumber === values.mobileNumber) {\r\n      notify(`Please Enter your ${paymentOption} account number.`)\r\n    }\r\n    else {\r\n      addWallet(token, values)\r\n        .then(response => {\r\n          setDisabledButton({ disabled: false });\r\n          notify('Add Amount Successfully. Please wait for verification')\r\n          createNotifications(token, id, `You have recharge ${values.amount} Taka (TransactionId: ${values.transactionID}).Your transaction is being processed. Please wait for admin varification.`)\r\n          history.push('/userWallet')\r\n        })\r\n        .catch(err => {\r\n          setDisabledButton({ disabled: false });\r\n          let errMsg = \"Something went wrong!\";\r\n          if (err.response) errMsg = err.response.data;\r\n          notify(errMsg)\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  function paymentTypeNumber(paymentType) {\r\n    paymentOption=paymentType\r\n    for (let i = 0; i < paymentMethod.length; i++) {\r\n      if (paymentType === paymentMethod[i].name) {\r\n        paymentNumber = paymentMethod[i].number\r\n\r\n        return (\r\n          <>\r\n            ({paymentMethod[i].number}) <i className=\"fa fa-copy\" onClick={copyNumber(paymentMethod[i].number)} style={{ fontSize: \".8rem\", color: \"grey\", cursor: \"pointer\" }}></i>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // const copyNumber = (number) => {\r\n  //   console.log(\"Hello\")\r\n  //   //navigator.clipboard.writeText(number);\r\n   \r\n  // }\r\n\r\n  return (\r\n\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"content-width\">\r\n        <Row className=\"d-flex justify-content-center\" >\r\n          {paymentMethod && paymentMethod.map((data, index) => {\r\n            return (\r\n              <Col key={index} sm={6} xs={6} xl={3}>\r\n                <ButtonToggle\r\n                  active={active === data._id}\r\n                  onClick={() => setActive(data._id)}\r\n                  onClick={function (event) {\r\n                    setActive(data._id);\r\n                    func2(data.name)\r\n                  }}\r\n                  variant=\"outline-primary\" name=\"paymentType\" value={paymentType}><img\r\n                    className=\"object\" src={`${API}${data.image}`} alt={data.name} />\r\n                  <div\r\n                    bg=\"primary\" name=\"paymentType\" value={paymentType}>{data.name}</div>\r\n                </ButtonToggle>\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n\r\n\r\n        <div>\r\n          {moneySendWay.map((data, index) => {\r\n            return (\r\n              <Fragment key={index}>\r\n\r\n                <div className=\"\">\r\n\r\n                  <div>\r\n                    <div className=\"m-2\">\r\n                      <div className='d-flex text-edit'>\r\n                        <div className='mr-2'> {paymentType}</div>\r\n                        <div>\r\n                          {paymentTypeNumber(paymentType)}\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"font-bold\">{data.how}</div>\r\n                    </div>\r\n                    <div className=\"mb-2 text-muted\">{data.condition}</div>\r\n                    Step 1\r\n                    {data.Step1.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2 d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\">\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                    Step 2\r\n                    {data.Step2.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2  d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\" >\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                          {/*<div className=\"m-2\">*/}\r\n                          {/*    {index + 1} .{allData.point}*/}\r\n                          {/*</div>*/}\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </div>\r\n        <div>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control type=\"amount\" name=\"amount\" value={amount} placeholder=\"Enter Amount\"\r\n                onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Sender Number</Form.Label>\r\n              <Form.Control type=\"seders_number\" name=\"mobileNumber\" value={mobileNumber}\r\n                placeholder=\"Sender Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Transaction Number</Form.Label>\r\n              <Form.Control type=\"transactionNumber\" name=\"transactionID\" value={transactionID}\r\n                placeholder=\"Transaction Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={disabled} onClick={handleSubmit} style={{ backgroundColor: \"#1976d2\" }}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Confirm","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport AdminRoute from \"components/protectedRoutes/AdminRoute\";\r\nimport AdminLayout from \"./layouts/Admin\";\r\nimport Home from \"./layouts/home\";\r\nimport TopUp from \"./layouts/TopUp\";\r\nimport Login from \"./layouts/Login\";\r\nimport Registration from \"./layouts/Registration\";\r\nimport { AuthProvider } from \"./utils/auth\";\r\nimport Confirmation from \"./views/Confirmation\";\r\nimport Confirm from \"components/Main/Confirmation/Confirm\";\r\nimport UserProfile from \"./components/Main/User/UserProfile\";\r\nimport NavBar from \"./layouts/NavBar\";\r\nimport UserWallet from \"./components/Main/User/UserWallet\";\r\nimport MyOrder from \"./components/Main/User/MyOrder\";\r\nimport Footer from './components/Main/Footer/index'\r\nimport Notification from './components/Main/User/Notification';\r\nimport ResetPassword from \"./components/User/ResetPassword\";\r\nimport ForgotPassword from \"./components/User/forgotPassword\";\r\nimport Support from \"./components/Main/User/Support\";\r\nimport TermsCondition from \"./components/Main/Footer/TermsCondition\";\r\nimport PrivacyPolicy from \"./components/Main/Footer/PrivacyPolicy\";\r\nimport ShipmentInfo from \"./components/Main/Footer/ShipmentInfo\";\r\nimport ReturnRefund from \"./components/Main/Footer/Return&Refund\";\r\nimport AboutUs from \"./components/Main/Footer/AboutUs\";\r\nimport PageNotFound from \"./components/Main/pageNotFound\";\r\nimport Search from \"./components/Main/search/Search\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route path=\"/admin\">\r\n                    <AdminRoute path=\"/admin\">\r\n                        <AdminLayout />\r\n                    </AdminRoute>\r\n                </Route>\r\n\r\n\r\n                <Route exact path=\"/\" component={Login} />\r\n\r\n                {/*<Route exact path=\"/login\" component={Login} />*/}\r\n                {/*<Route exact path=\"/registration\" component={Registration} />*/}\r\n                {/*<Route exact path=\"/confirmation\" component={Confirm} />*/}\r\n                {/*<Route exact path=\"/profile\" component={UserProfile} />*/}\r\n                {/*<Route exact path=\"/userWallet\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/userWallet-:number\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/myOrder\" component={MyOrder} />*/}\r\n                {/*<Route exact path=\"/myOrder-:number\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/notification\" component={Notification} />*/}\r\n                {/*<Route exact path=\"/forgotPassword\" component={ForgotPassword} />*/}\r\n                {/*<Route exact path=\"/resetPassword\" component={ResetPassword} />*/}\r\n                {/*<Route exact path=\"/support\" component={Support} />*/}\r\n                {/*<Route exact path=\"/terms&condition\" component={TermsCondition} />*/}\r\n                {/*<Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />*/}\r\n                {/*<Route exact path=\"/shipment-info\" component={ShipmentInfo} />*/}\r\n                {/*<Route exact path=\"/refund&return-policy\" component={ReturnRefund} />*/}\r\n                {/*<Route exact path=\"/about\" component={AboutUs} />*/}\r\n                {/*<Route exact path=\"/search-result\" component={Search} />*/}\r\n\r\n                {/*<Route exact path=\"/topUp-:productId\" component={TopUp} />*/}\r\n                {/*<Route exact component={PageNotFound} />*/}\r\n\r\n\r\n            </Switch>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default App","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport App from \"./App\";\r\nimport Confirm from \"./components/Main/Confirmation/Confirm\";\r\n\r\nReactDOM.render(\r\n    \r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}